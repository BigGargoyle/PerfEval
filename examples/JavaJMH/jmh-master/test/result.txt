# JMH version: 1.36
# VM version: JDK 11.0.18, OpenJDK 64-Bit Server VM, 11.0.18+10-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testMethod

# Run progress: 0,00% complete, ETA 00:08:20
# Fork: 1 of 5
# Warmup Iteration   1: 1987260394,273 ops/s
# Warmup Iteration   2: 1946491121,657 ops/s
# Warmup Iteration   3: 1462496845,321 ops/s
# Warmup Iteration   4: 1578836014,709 ops/s
# Warmup Iteration   5: 1551699315,329 ops/s
Iteration   1: 1310730684,882 ops/s
Iteration   2: 1186585357,642 ops/s
Iteration   3: 1609774713,312 ops/s
Iteration   4: 1070744218,952 ops/s
Iteration   5: 1280408153,587 ops/s

# Run progress: 20,00% complete, ETA 00:06:42
# Fork: 2 of 5
# Warmup Iteration   1: 1727168200,452 ops/s
# Warmup Iteration   2: 1994666837,914 ops/s
# Warmup Iteration   3: 1285893593,782 ops/s
# Warmup Iteration   4: 1391341888,770 ops/s
# Warmup Iteration   5: 1424187813,441 ops/s
Iteration   1: 1302345251,177 ops/s
Iteration   2: 1393357495,718 ops/s
Iteration   3: 1020830622,011 ops/s
Iteration   4: 1031476484,909 ops/s
Iteration   5: 1294666750,757 ops/s

# Run progress: 40,00% complete, ETA 00:05:02
# Fork: 3 of 5
# Warmup Iteration   1: 2145305748,476 ops/s
# Warmup Iteration   2: 2158757448,393 ops/s
# Warmup Iteration   3: 1460328929,676 ops/s
# Warmup Iteration   4: 1477211174,459 ops/s
# Warmup Iteration   5: 1638711100,929 ops/s
Iteration   1: 1638815680,513 ops/s
Iteration   2: 1599206077,600 ops/s
Iteration   3: 1253104575,318 ops/s
Iteration   4: 1632223672,705 ops/s
Iteration   5: 1635481535,229 ops/s

# Run progress: 60,00% complete, ETA 00:03:21
# Fork: 4 of 5
# Warmup Iteration   1: 2139390024,741 ops/s
# Warmup Iteration   2: 2164898236,286 ops/s
# Warmup Iteration   3: 1642049971,687 ops/s
# Warmup Iteration   4: 1589371611,450 ops/s
# Warmup Iteration   5: 1614679575,851 ops/s
Iteration   1: 1620740465,337 ops/s
Iteration   2: 1463326389,209 ops/s
Iteration   3: 1150755155,976 ops/s
Iteration   4: 1612042320,400 ops/s
Iteration   5: 1597664375,252 ops/s

# Run progress: 80,00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 2090727842,605 ops/s
# Warmup Iteration   2: 2174442115,528 ops/s
# Warmup Iteration   3: 1623506576,686 ops/s
# Warmup Iteration   4: 1635724064,790 ops/s
# Warmup Iteration   5: 1591220937,415 ops/s
Iteration   1: 1631670767,725 ops/s
Iteration   2: 1600315563,905 ops/s
Iteration   3: 1183853605,875 ops/s
Iteration   4: 1179334743,231 ops/s
Iteration   5: 1475197294,202 ops/s


Result "org.sample.MyBenchmark.testMethod":
  1390986078,217 ±(99.9%) 163250000,537 ops/s [Average]
  (min, avg, max) = (1020830622,011, 1390986078,217, 1638815680,513), stdev = 217934080,095
  CI (99.9%): [1227736077,680, 1554236078,754] (assumes normal distribution)


# Run complete. Total time: 00:08:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                Mode  Cnt           Score           Error  Units
MyBenchmark.testMethod  thrpt   25  1390986078,217 ± 163250000,537  ops/s
