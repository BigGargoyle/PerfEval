old version: 43a996010438ab8784c19269cab14932e02d3a6a
new version: 4a4848d9b9c47e4b3e5a00fb4ca0e19e2c11828b
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 13.0 us/op       | 14.0 us/op       | +4.59     | +0.590        | +0.640        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 9.0 us/op        | 10.0 us/op       | +10.73    | +0.990        | +1.030        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +15.39    | +1.028        | +1.055        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 114 ms/op        | 131 ms/op        | +15.07    | +17.005       | +17.235       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -1.14     | -0.035        | -0.013        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +1.87     | +0.007        | +0.008        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 101.0 ms/op      | +22.92    | +18.829       | +18.876       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 115 ms/op        | +0.97     | +0.902        | +1.332        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.000 us/op      | 0.000 us/op      | +5.52     | +0.002        | +0.002        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.20    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 775 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 215 us/op        | 182 us/op        | -15.40    | -34.506       | -31.845       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 631 ms/op        | 580 ms/op        | -8.10     | -52.030       | -50.310       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 208 ms/op        | 192 ms/op        | -7.77     | -17.173       | -15.151       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 406 ms/op        | -0.82     | -3.999        | -2.794        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 444 ms/op        | 424 ms/op        | -4.54     | -24.423       | -15.819       | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 608 ms/op        | 586 ms/op        | -3.65     | -23.334       | -21.074       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 247 ms/op        | +10.07    | +21.910       | +23.187       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +2.21     | +0.133        | +0.158        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 496 ms/op        | -10.51    | -58.416       | -58.029       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 21.0 ms/op       | +22.02    | +3.741        | +3.828        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 549 ms/op        | 506 ms/op        | -7.73     | -42.675       | -42.208       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 14.0 ms/op       | +7.76     | +0.998        | +1.022        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39.0 us/op       | 32.0 us/op       | -19.43    | -7.656        | -7.556        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -0.47     | -0.117        | -0.018        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | +0.47     | -5.027        | +5.875        | impossible to measure (1074 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +0.44     | -0.667        | +0.680        | impossible to measure (999 samples needed) | NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 540 us/op        | 524 us/op        | -2.92     | -20.469       | -12.022       | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 500 us/op        | 483 us/op        | -3.44     | -19.602       | -15.298       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 320 us/op        | 332 us/op        | +3.52     | +8.546        | +13.866       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 301 us/op        | +1.08     | +2.663        | +3.783        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 696 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74690e+09 ops/s| 3.26932e+08 ops/s| +434.33   | -1.42084e+09  | -1.41910e+09  | different distribution                     | OK                |
