old version: 270b1bd3db98ccd7e2427c7f5a8137d47477b5a1
new version: 30081686c6e38b3b20817d86a3a38eb652c8625a
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -5.61     | -0.797        | -0.748        | different distribution                     | NOT OK            |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -1.85     | -0.194        | -0.160        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -4.68     | -0.349        | -0.322        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.92     | +0.009        | +0.016        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +17.36    | +0.003        | +0.004        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.00000 us/op    | 0.00000 us/op    | +21.42    | +0.001        | +0.001        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | +17.73    | +0.004        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 113 ms/op        | -2.01     | -2.440        | -2.214        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -7.77     | -0.197        | -0.165        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -1.11     | -0.005        | -0.004        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 82.0 ms/op       | +1.98     | +1.579        | +1.606        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 114 ms/op        | -1.62     | -1.977        | -1.766        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -5.25     | -0.002        | -0.002        | different distribution                     | NOT OK            |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | +0.02     | +0.000        | +0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 788 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 230 us/op        | 227 us/op        | -1.04     | -3.384        | -1.346        | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 629 ms/op        | 631 ms/op        | +0.38     | +1.521        | +3.279        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 206 ms/op        | -4.06     | -9.045        | -8.349        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 408 ms/op        | -0.29     | -1.850        | -0.555        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 443 ms/op        | 443 ms/op        | +0.12     | -0.607        | +1.673        | same distribution                          | OK                |
| iceeaG.measureGroupByMinString          | 639 ms/op        | 607 ms/op        | -4.87     | -32.970       | -29.297       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 226 ms/op        | 231 ms/op        | +2.50     | +5.164        | +6.220        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.35     | +0.017        | +0.028        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 552 ms/op        | 553 ms/op        | +0.30     | +0.908        | +2.277        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.16     | -0.034        | -0.020        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 548 ms/op        | +0.35     | +1.665        | +2.170        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 13.0 ms/op       | +12.45    | +1.433        | +1.454        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 40 us/op         | 39 us/op         | -1.01     | -0.464        | -0.337        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14 us/op         | 14 us/op         | -1.41     | -0.253        | -0.146        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 18 us/op         | +4.95     | -5.252        | +6.088        | impossible to measure (1054 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +1.28     | -0.617        | +0.737        | impossible to measure (1044 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 534 us/op        | 529 us/op        | -1.04     | -9.457        | -1.593        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 500 us/op        | 503 us/op        | +0.57     | -0.399        | +5.937        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 324 us/op        | +2.83     | +7.888        | +9.951        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 294 us/op        | 297 us/op        | +1.15     | +2.963        | +3.840        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 684 us/op        | 687 us/op        | +0.44     | -3.133        | +9.273        | same distribution                          | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74684e+09 ops/s| 1.74690e+09 ops/s| -0.00     | 4.47887e+04   | 8.59618e+04   | different distribution                     | OK                |
