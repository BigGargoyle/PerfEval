old version: 270b1bd3db98ccd7e2427c7f5a8137d47477b5a1
new version: 50e3ed3a43f7a85d52c6cd96791a4fe76c941ba8
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -3.77     | -0.535        | -0.484        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -0.66     | -0.079        | -0.044        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | +0.12     | -0.005        | +0.020        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | -0.07     | -0.004        | +0.002        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.0000 us/op     | 0.0000 us/op     | -0.05     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.000000 us/op   | 0.000000 us/op   | +0.01     | +0.000        | +0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | +0.29     | +0.000        | +0.000        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 113 ms/op        | +0.31     | +0.189        | +0.484        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -0.68     | -0.027        | -0.002        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.21     | +0.001        | +0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | -0.01     | -0.027        | +0.002        | same distribution                          | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | +0.22     | +0.189        | +0.320        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -0.06     | -0.000        | +0.000        | same distribution                          | OK                |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | -0.00     | -0.000        | +0.000        | same distribution                          | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 774 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 213 us/op        | 227 us/op        | +6.77     | +13.038       | +16.019       | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 636 ms/op        | 631 ms/op        | -0.81     | -8.234        | -2.644        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 207 ms/op        | 206 ms/op        | -0.50     | -1.917        | -0.254        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 408 ms/op        | -0.21     | -1.754        | +0.137        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 443 ms/op        | +0.50     | +1.120        | +3.397        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 609 ms/op        | 607 ms/op        | -0.21     | -2.157        | -0.407        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 231 ms/op        | +3.18     | +6.727        | +7.533        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | -0.51     | -0.040        | -0.028        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 553 ms/op        | -0.12     | -0.932        | -0.440        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | +0.03     | -0.005        | +0.013        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 548 ms/op        | +0.09     | +0.300        | +0.738        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | +0.37     | +0.033        | +0.061        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.41     | +0.097        | +0.224        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -0.15     | -0.066        | +0.028        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 18 us/op         | +6.80     | -4.997        | +6.599        | impossible to measure (1084 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +3.64     | -0.558        | +0.666        | impossible to measure (1040 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 532 us/op        | 529 us/op        | -0.63     | -8.202        | +1.338        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 509 us/op        | 503 us/op        | -1.28     | -8.966        | -4.016        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 323 us/op        | 324 us/op        | +0.05     | -1.121        | +1.694        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 297 us/op        | -0.09     | -0.966        | +0.368        | same distribution                          | OK                |
| icoaI.benchmarkIntervalAggregation      | 680 us/op        | 687 us/op        | +0.96     | +0.610        | +12.114       | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74697e+09 ops/s| 1.74690e+09 ops/s| +0.00     | -9.39925e+04  | -5.18283e+04  | different distribution                     | OK                |
