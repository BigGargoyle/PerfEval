old version: 03c913ecc91043b1cecdff738dd7bdea07857a9b
new version: 5b6458b20779a1429fa5724c447bbb9b779298e9
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -3.60     | -0.518        | -0.456        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -0.83     | -0.095        | -0.064        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -0.43     | -0.041        | -0.018        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.15     | -0.001        | +0.005        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.0000 us/op     | 0.0000 us/op     | -0.16     | -0.000        | -0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.000000 us/op   | 0.000000 us/op   | +0.00     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | -0.27     | -0.000        | -0.000        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 113 ms/op        | +0.10     | -0.029        | +0.248        | same distribution                          | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | +0.35     | -0.006        | +0.020        | same distribution                          | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.14     | +0.000        | +0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | -0.04     | -0.051        | -0.021        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | -0.24     | -0.370        | -0.181        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -0.12     | -0.000        | -0.000        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | -0.15     | -0.000        | -0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 772 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 212 us/op        | 224 us/op        | +5.58     | +10.282       | +13.348       | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 633 ms/op        | 633 ms/op        | +0.04     | -0.893        | +1.488        | same distribution                          | OK                |
| iceeaG.measureGroupingOnLongArray       | 206 ms/op        | 206 ms/op        | -0.12     | -0.392        | -0.082        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 411 ms/op        | 409 ms/op        | -0.37     | -2.523        | -0.660        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 440 ms/op        | -0.57     | -3.354        | -1.723        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 608 ms/op        | 604 ms/op        | -0.55     | -4.009        | -2.652        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 225 ms/op        | 231 ms/op        | +2.58     | +5.417        | +6.264        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.46     | +0.024        | +0.037        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 554 ms/op        | +0.08     | +0.265        | +0.665        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.03     | -0.015        | +0.002        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 548 ms/op        | -0.04     | -0.447        | -0.019        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | -0.17     | -0.035        | -0.009        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.49     | +0.120        | +0.259        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +1.56     | +0.174        | +0.257        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | -0.83     | -5.632        | +5.507        | impossible to measure (1067 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +3.45     | -0.557        | +0.712        | impossible to measure (1052 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 537 us/op        | +1.07     | +1.549        | +9.267        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 505 us/op        | 503 us/op        | -0.53     | -5.096        | -0.379        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 323 us/op        | 322 us/op        | -0.24     | -2.094        | +0.666        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 296 us/op        | -0.60     | -2.342        | -1.218        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 684 us/op        | 690 us/op        | +0.91     | +0.410        | +11.663       | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74690e+09 ops/s| 1.74694e+09 ops/s| -0.00     | 1.37444e+04   | 5.04253e+04   | different distribution                     | OK                |
