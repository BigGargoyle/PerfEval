old version: a9ae6e07bfafea8771f559122f5330a89793748b
new version: 30081686c6e38b3b20817d86a3a38eb652c8625a
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | +2.05     | +0.252        | +0.314        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +7.64     | +0.716        | +0.756        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +8.58     | +0.602        | +0.633        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 131 ms/op        | +13.23    | +15.213       | +15.385       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -10.30    | -0.254        | -0.226        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.58     | +0.002        | +0.003        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 101.0 ms/op      | +25.45    | +20.491       | +20.533       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 115 ms/op        | -0.79     | -1.112        | -0.703        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.000 us/op      | 0.000 us/op      | +0.19     | -0.000        | +0.000        | same distribution                          | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.32    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 788 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 230 us/op        | 183 us/op        | -20.12    | -47.229       | -45.167       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 629 ms/op        | 578 ms/op        | -8.01     | -51.545       | -49.275       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 193 ms/op        | -10.36    | -22.903       | -21.564       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 408 ms/op        | -0.34     | -2.213        | -0.539        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 443 ms/op        | 431 ms/op        | -2.72     | -15.535       | -8.360        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 639 ms/op        | 590 ms/op        | -7.63     | -51.104       | -46.509       | different distribution                     | NOT OK            |
| iceeccL.measureConsumeL~neBatchIterator | 226 ms/op        | 246 ms/op        | +9.03     | +19.738       | +21.004       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +2.29     | +0.140        | +0.161        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 552 ms/op        | 496 ms/op        | -10.19    | -56.870       | -55.578       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17 ms/op         | 21 ms/op         | +19.53    | +3.284        | +3.436        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 505 ms/op        | -7.47     | -41.020       | -40.569       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 14.0 ms/op       | +21.05    | +2.421        | +2.460        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 40 us/op         | 32 us/op         | -20.24    | -8.092        | -7.956        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -2.65     | -0.421        | -0.325        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | -0.54     | -5.382        | +5.367        | impossible to measure (1053 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +2.01     | -0.592        | +0.656        | impossible to measure (1086 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 534 us/op        | 532 us/op        | -0.45     | -5.634        | +1.042        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 500 us/op        | 483 us/op        | -3.35     | -19.625       | -14.082       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 335 us/op        | +6.37     | +17.510       | +22.589       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 294 us/op        | 301 us/op        | +2.37     | +6.630        | +7.307        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 684 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74684e+09 ops/s| 3.29796e+08 ops/s| +429.67   | -1.41780e+09  | -1.41631e+09  | different distribution                     | OK                |
