old version: 4a4848d9b9c47e4b3e5a00fb4ca0e19e2c11828b
new version: 6a2b489d9b5691f9bc517e312c86814d4a4f8b07
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -1.41     | -0.216        | -0.164        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -1.45     | -0.155        | -0.121        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -1.69     | -0.128        | -0.104        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | -0.26     | -0.007        | +0.000        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.0000 us/op     | 0.0000 us/op     | -0.06     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.000000 us/op   | 0.000000 us/op   | +0.00     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | +0.08     | -0.000        | +0.000        | same distribution                          | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 114 ms/op        | +0.42     | +0.338        | +0.608        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -2.87     | -0.075        | -0.050        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -0.34     | -0.002        | -0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | +0.04     | +0.017        | +0.048        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | -0.11     | -0.188        | -0.067        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | +0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | +0.20     | +0.000        | +0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 779 us/op        | 775 us/op        | -0.47     | -6.832        | -0.529        | different distribution                     | OK                |
| iceeaA.measureAggregateCollector        | 214 us/op        | 215 us/op        | +0.32     | -1.071        | +2.393        | same distribution                          | OK                |
| iceeaG.measureGroupBySumLong            | 633 ms/op        | 631 ms/op        | -0.25     | -2.272        | -0.899        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 211 ms/op        | 208 ms/op        | -1.23     | -5.487        | -0.190        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 409 ms/op        | -0.03     | -0.806        | +0.515        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 444 ms/op        | +0.38     | +0.188        | +3.253        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 609 ms/op        | 608 ms/op        | -0.23     | -2.461        | -0.460        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 224 ms/op        | +0.27     | +0.346        | +0.880        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | -0.12     | -0.014        | -0.001        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 554 ms/op        | -0.00     | -0.201        | +0.190        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.23     | -0.047        | -0.032        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 549 ms/op        | 549 ms/op        | +0.01     | -0.339        | +0.360        | same distribution                          | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | -0.18     | -0.038        | -0.007        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | -0.11     | -0.096        | +0.019        | same distribution                          | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -0.12     | -0.065        | +0.028        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | -0.04     | -6.500        | +5.502        | impossible to measure (1057 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +2.26     | -0.591        | +0.712        | impossible to measure (1032 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 547 us/op        | 540 us/op        | -1.32     | -11.949       | -2.890        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 506 us/op        | 500 us/op        | -1.15     | -8.188        | -3.420        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 321 us/op        | 320 us/op        | -0.25     | -2.180        | +0.578        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 296 us/op        | 298 us/op        | +0.55     | +1.042        | +2.328        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 689 us/op        | 696 us/op        | +1.03     | +1.733        | +12.315       | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74691e+09 ops/s| 1.74690e+09 ops/s| +0.00     | -3.15879e+04  | +5564.123     | same distribution                          | OK                |
