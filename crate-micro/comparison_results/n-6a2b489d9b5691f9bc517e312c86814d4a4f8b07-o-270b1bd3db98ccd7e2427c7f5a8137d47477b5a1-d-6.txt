old version: 270b1bd3db98ccd7e2427c7f5a8137d47477b5a1
new version: 6a2b489d9b5691f9bc517e312c86814d4a4f8b07
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -4.16     | -0.593        | -0.537        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -0.83     | -0.092        | -0.067        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -0.39     | -0.039        | -0.015        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | -0.57     | -0.011        | -0.005        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.0000 us/op     | 0.0000 us/op     | -0.04     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.000000 us/op   | 0.000000 us/op   | -0.00     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | +0.22     | +0.000        | +0.000        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 113 ms/op        | +0.19     | +0.072        | +0.349        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -2.60     | -0.070        | -0.044        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -0.21     | -0.001        | -0.000        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | -0.04     | -0.043        | -0.016        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | +0.05     | -0.002        | +0.134        | same distribution                          | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | +0.03     | -0.000        | +0.000        | same distribution                          | OK                |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | -0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 779 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 214 us/op        | 227 us/op        | +5.90     | +11.215       | +14.151       | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 633 ms/op        | 631 ms/op        | -0.24     | -2.074        | -0.964        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 211 ms/op        | 206 ms/op        | -2.34     | -7.291        | -2.519        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 408 ms/op        | -0.33     | -2.018        | -0.690        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 443 ms/op        | +0.20     | -0.030        | +1.837        | same distribution                          | OK                |
| iceeaG.measureGroupByMinString          | 609 ms/op        | 607 ms/op        | -0.31     | -2.860        | -1.016        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 231 ms/op        | +3.40     | +7.176        | +8.045        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | -0.26     | -0.023        | -0.011        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 553 ms/op        | -0.13     | -0.946        | -0.499        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.19     | -0.042        | -0.025        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 549 ms/op        | 548 ms/op        | -0.08     | -0.783        | -0.077        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | +0.00     | -0.016        | +0.015        | same distribution                          | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.09     | -0.028        | +0.095        | same distribution                          | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +0.14     | -0.026        | +0.067        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 18 us/op         | +4.78     | -4.985        | +6.830        | impossible to measure (1061 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +4.20     | -0.524        | +0.685        | impossible to measure (1038 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 547 us/op        | 529 us/op        | -3.34     | -22.678       | -13.376       | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 506 us/op        | 503 us/op        | -0.61     | -5.616        | -0.344        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 321 us/op        | 324 us/op        | +0.80     | +1.311        | +4.006        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 296 us/op        | 297 us/op        | +0.25     | +0.246        | +1.311        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 689 us/op        | 687 us/op        | -0.31     | -7.672        | +3.636        | same distribution                          | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74691e+09 ops/s| 1.74690e+09 ops/s| +0.00     | -3.31131e+04  | +5378.591     | same distribution                          | OK                |
