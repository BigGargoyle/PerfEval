old version: 4a4848d9b9c47e4b3e5a00fb4ca0e19e2c11828b
new version: 5ad19461d9bbdfd812586612f3598ef91fb1d529
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -2.08     | -0.309        | -0.260        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -1.69     | -0.181        | -0.145        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -5.75     | -0.428        | -0.398        | different distribution                     | NOT OK            |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +1.17     | +0.013        | +0.020        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +14.67    | +0.003        | +0.003        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.00000 us/op    | 0.00000 us/op    | +21.44    | +0.001        | +0.001        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | +18.61    | +0.004        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 114 ms/op        | -1.73     | -2.111        | -1.886        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -5.47     | -0.139        | -0.111        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -0.81     | -0.004        | -0.003        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81 ms/op         | 82 ms/op         | +1.90     | +1.481        | +1.582        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 114 ms/op        | -1.62     | -1.987        | -1.757        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -5.46     | -0.002        | -0.002        | different distribution                     | NOT OK            |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | +0.23     | +0.000        | +0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 789 us/op        | 775 us/op        | -1.81     | -16.852       | -11.770       | different distribution                     | OK                |
| iceeaA.measureAggregateCollector        | 226 us/op        | 215 us/op        | -4.95     | -12.551       | -9.694        | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 626 ms/op        | 631 ms/op        | +0.86     | +4.716        | +6.083        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 208 ms/op        | -2.93     | -7.043        | -5.563        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 410 ms/op        | 409 ms/op        | -0.20     | -1.893        | +0.195        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 444 ms/op        | +0.67     | +1.339        | +4.556        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 639 ms/op        | 608 ms/op        | -4.81     | -32.661       | -28.731       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 224 ms/op        | -0.04     | -0.453        | +0.324        | same distribution                          | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.62     | +0.034        | +0.047        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 552 ms/op        | 554 ms/op        | +0.34     | +1.269        | +2.435        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.24     | -0.050        | -0.034        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 549 ms/op        | +0.55     | +2.771        | +3.250        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 13.0 ms/op       | +12.25    | +1.410        | +1.431        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39.0 us/op       | 39.0 us/op       | +0.37     | +0.096        | +0.192        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +1.58     | +0.183        | +0.253        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -0.82     | -6.000        | +4.942        | impossible to measure (1090 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -1.02     | -0.655        | +0.600        | impossible to measure (1046 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 538 us/op        | 540 us/op        | +0.33     | -1.814        | +5.217        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 498 us/op        | 500 us/op        | +0.39     | -0.173        | +3.964        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 316 us/op        | 320 us/op        | +1.30     | +2.537        | +5.755        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 295 us/op        | 298 us/op        | +1.16     | +2.780        | +4.084        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 684 us/op        | 696 us/op        | +1.83     | +6.479        | +18.572       | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74702e+09 ops/s| 1.74690e+09 ops/s| +0.01     | -1.39205e+05  | -1.07672e+05  | different distribution                     | OK                |
