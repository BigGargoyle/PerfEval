old version: 5f0d8a0792f5c6fa2f90f42518b39abb242f21c2
new version: f6c3d156e826c811d2da170b8ae36f67be102e54
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | -1.12     | -0.185        | -0.124        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +4.80     | +0.441        | +0.487        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +6.18     | +0.434        | +0.462        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 132 ms/op        | +13.71    | +15.583       | +16.150       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -8.93     | -0.218        | -0.191        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.88     | +0.003        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 101.0 ms/op      | +25.61    | +20.603       | +20.658       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 115 ms/op        | 114 ms/op        | -1.02     | -1.299        | -1.067        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -0.44     | -0.000        | -0.000        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.22    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 791 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 229 us/op        | 183 us/op        | -20.25    | -47.330       | -45.550       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 627 ms/op        | 577 ms/op        | -7.90     | -50.315       | -48.645       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 215.0 ms/op      | 193.0 ms/op      | -10.03    | -21.587       | -21.505       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 405 ms/op        | -0.85     | -4.346        | -2.480        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 429 ms/op        | -2.85     | -13.808       | -11.411       | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 638 ms/op        | 585 ms/op        | -8.42     | -55.875       | -51.364       | different distribution                     | NOT OK            |
| iceeccL.measureConsumeL~neBatchIterator | 226 ms/op        | 244 ms/op        | +7.87     | +17.332       | +18.225       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +2.54     | +0.156        | +0.179        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 549 ms/op        | 496 ms/op        | -9.70     | -53.498       | -53.024       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17 ms/op         | 21 ms/op         | +20.19    | +3.408        | +3.545        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 545 ms/op        | 506 ms/op        | -7.09     | -38.855       | -38.435       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 14.0 ms/op       | +21.18    | +2.442        | +2.468        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 32 us/op         | -19.48    | -7.687        | -7.586        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +0.09     | -0.021        | +0.045        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -3.80     | -6.514        | +5.189        | impossible to measure (1105 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 3 us/op          | +8.04     | -0.469        | +0.877        | impossible to measure (1159 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 535 us/op        | +0.91     | +0.933        | +9.116        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 504 us/op        | 483 us/op        | -4.09     | -23.775       | -17.746       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 325 us/op        | +3.06     | +7.983        | +11.375       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 301 us/op        | +1.63     | +3.715        | +5.918        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAvgAggregation   | 0 us/op          | 288 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icoaI.benchmarkIntervalSumAggregation   | 0 us/op          | 676 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74698e+09 ops/s| 3.29549e+08 ops/s| +430.11   | -1.41814e+09  | -1.41661e+09  | different distribution                     | OK                |
