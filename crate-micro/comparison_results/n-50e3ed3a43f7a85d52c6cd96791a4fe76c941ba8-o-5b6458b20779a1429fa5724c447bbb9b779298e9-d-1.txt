old version: 5b6458b20779a1429fa5724c447bbb9b779298e9
new version: 50e3ed3a43f7a85d52c6cd96791a4fe76c941ba8
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | -0.05     | -0.036        | +0.020        | same distribution                          | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | -0.08     | -0.025        | +0.008        | same distribution                          | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | +0.03     | -0.011        | +0.013        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.04     | -0.003        | +0.004        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.0000 us/op     | 0.0000 us/op     | -0.30     | -0.000        | -0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.000000 us/op   | 0.000000 us/op   | +0.00     | +0.000        | +0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | +0.20     | +0.000        | +0.000        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 113 ms/op        | +0.00     | -0.150        | +0.141        | same distribution                          | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | +0.69     | +0.003        | +0.027        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.21     | +0.001        | +0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | +0.00     | -0.013        | +0.017        | same distribution                          | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | +0.26     | +0.200        | +0.401        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -0.09     | -0.000        | -0.000        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | +0.15     | +0.000        | +0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 774 us/op        | 772 us/op        | -0.22     | -4.548        | +0.997        | same distribution                          | OK                |
| iceeaA.measureAggregateCollector        | 213 us/op        | 212 us/op        | -0.30     | -2.263        | +1.246        | same distribution                          | OK                |
| iceeaG.measureGroupBySumLong            | 636 ms/op        | 633 ms/op        | -0.55     | -6.494        | -0.730        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 207 ms/op        | 206 ms/op        | -0.60     | -2.119        | -0.522        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 411 ms/op        | +0.48     | +0.795        | +3.324        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 442 ms/op        | +0.25     | +0.391        | +1.799        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 609 ms/op        | 608 ms/op        | -0.17     | -2.000        | -0.080        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 225 ms/op        | +0.35     | +0.462        | +1.142        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | -0.59     | -0.047        | -0.033        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 554 ms/op        | -0.06     | -0.542        | -0.104        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | +0.15     | +0.016        | +0.035        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 548 ms/op        | +0.04     | +0.046        | +0.418        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | +0.17     | +0.009        | +0.036        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.02     | -0.052        | +0.075        | same distribution                          | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -1.24     | -0.216        | -0.126        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | -0.23     | -5.188        | +5.595        | impossible to measure (1038 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +1.14     | -0.556        | +0.648        | impossible to measure (1047 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 532 us/op        | 531 us/op        | -0.18     | -5.541        | +3.662        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 509 us/op        | 505 us/op        | -0.84     | -6.577        | -2.125        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 323 us/op        | 323 us/op        | -0.17     | -1.949        | +0.970        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 298 us/op        | +0.24     | +0.015        | +1.389        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 680 us/op        | 684 us/op        | +0.48     | -2.785        | +8.808        | same distribution                          | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74697e+09 ops/s| 1.74690e+09 ops/s| +0.00     | -8.78187e+04  | -4.93773e+04  | different distribution                     | OK                |
