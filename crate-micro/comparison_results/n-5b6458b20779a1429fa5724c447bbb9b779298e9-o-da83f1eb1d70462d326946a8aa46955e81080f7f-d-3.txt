old version: da83f1eb1d70462d326946a8aa46955e81080f7f
new version: 5b6458b20779a1429fa5724c447bbb9b779298e9
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -1.04     | -0.167        | -0.114        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -1.15     | -0.125        | -0.093        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -1.47     | -0.113        | -0.090        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.03     | -0.002        | +0.003        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +0.86     | +0.000        | +0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.000000 us/op   | 0.000000 us/op   | +0.00     | +0.000        | +0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | -0.06     | -0.000        | +0.000        | same distribution                          | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 113 ms/op        | +0.04     | -0.086        | +0.177        | same distribution                          | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -1.36     | -0.042        | -0.017        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -0.11     | -0.001        | -0.000        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | -0.00     | -0.019        | +0.014        | same distribution                          | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | -0.14     | -0.277        | -0.012        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -0.03     | -0.000        | +0.000        | same distribution                          | OK                |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | -0.18     | -0.000        | -0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 772 us/op        | 776 us/op        | +0.51     | +1.082        | +6.573        | different distribution                     | OK                |
| iceeaA.measureAggregateCollector        | 212 us/op        | 216 us/op        | +1.69     | +1.749        | +5.488        | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 633 ms/op        | 634 ms/op        | +0.14     | +0.000        | +1.693        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 206 ms/op        | 207 ms/op        | +0.57     | +0.418        | +1.968        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 411 ms/op        | 409 ms/op        | -0.33     | -2.387        | -0.463        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 444 ms/op        | +0.34     | +0.395        | +2.571        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 608 ms/op        | 606 ms/op        | -0.23     | -2.239        | -0.598        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 225 ms/op        | 225 ms/op        | +0.12     | -0.082        | +0.716        | same distribution                          | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.09     | -0.001        | +0.013        | same distribution                          | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 554 ms/op        | +0.02     | -0.113        | +0.309        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.10     | -0.027        | -0.008        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 548 ms/op        | +0.07     | +0.179        | +0.666        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | -0.22     | -0.042        | -0.016        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.54     | +0.147        | +0.281        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +1.58     | +0.175        | +0.267        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | +2.36     | -5.270        | +5.745        | impossible to measure (1069 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -2.70     | -0.669        | +0.528        | impossible to measure (1036 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 531 us/op        | +0.04     | -3.747        | +4.108        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 505 us/op        | 505 us/op        | +0.00     | -2.113        | +2.354        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 323 us/op        | 324 us/op        | +0.23     | -0.641        | +2.000        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 297 us/op        | -0.24     | -1.339        | -0.018        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 684 us/op        | 685 us/op        | +0.19     | -4.590        | +7.289        | same distribution                          | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74690e+09 ops/s| 1.74693e+09 ops/s| -0.00     | 1.06884e+04   | 4.85596e+04   | different distribution                     | OK                |
