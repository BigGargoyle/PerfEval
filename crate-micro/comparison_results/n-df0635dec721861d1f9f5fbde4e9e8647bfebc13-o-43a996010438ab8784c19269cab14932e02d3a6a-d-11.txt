old version: 43a996010438ab8784c19269cab14932e02d3a6a
new version: df0635dec721861d1f9f5fbde4e9e8647bfebc13
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | +1.45     | +0.173        | +0.232        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +6.91     | +0.650        | +0.698        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +7.43     | +0.523        | +0.559        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 131 ms/op        | +12.82    | +14.756       | +14.947       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -7.13     | -0.179        | -0.147        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.84     | +0.003        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 101.0 ms/op      | +25.42    | +20.470       | +20.512       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 115 ms/op        | -0.82     | -1.205        | -0.716        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.000 us/op      | 0.000 us/op      | -0.35     | -0.000        | -0.000        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.45    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 784 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 227 us/op        | 182 us/op        | -19.94    | -46.257       | -44.320       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 628 ms/op        | 580 ms/op        | -7.71     | -49.506       | -47.168       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 192 ms/op        | -10.51    | -23.394       | -21.879       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 410 ms/op        | 406 ms/op        | -1.05     | -4.974        | -3.669        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 424 ms/op        | -4.12     | -22.294       | -14.345       | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 635 ms/op        | 586 ms/op        | -7.73     | -50.713       | -47.320       | different distribution                     | NOT OK            |
| iceeccL.measureConsumeL~neBatchIterator | 223 ms/op        | 247 ms/op        | +10.53    | +22.888       | +24.179       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +2.84     | +0.176        | +0.197        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 551 ms/op        | 496 ms/op        | -9.99     | -55.287       | -54.780       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 21.0 ms/op       | +21.77    | +3.704        | +3.793        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 506 ms/op        | -7.21     | -39.609       | -39.020       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.00 ms/op      | 14.00 ms/op      | +20.92    | +2.422        | +2.431        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 32 us/op         | -19.82    | -7.854        | -7.737        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -0.51     | -0.117        | -0.024        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -2.93     | -7.068        | +5.965        | impossible to measure (1071 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -1.80     | -0.638        | +0.575        | impossible to measure (1029 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 544 us/op        | 524 us/op        | -3.70     | -23.975       | -15.888       | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 504 us/op        | 483 us/op        | -4.24     | -23.691       | -19.063       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 332 us/op        | +5.27     | +14.361       | +19.367       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 294 us/op        | 301 us/op        | +2.30     | +6.540        | +7.036        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 669 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74697e+09 ops/s| 3.26932e+08 ops/s| +434.35   | -1.42102e+09  | -1.41922e+09  | different distribution                     | OK                |
