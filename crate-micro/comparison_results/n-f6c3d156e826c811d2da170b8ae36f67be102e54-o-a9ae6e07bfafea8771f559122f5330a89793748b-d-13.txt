old version: a9ae6e07bfafea8771f559122f5330a89793748b
new version: f6c3d156e826c811d2da170b8ae36f67be102e54
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | +0.97     | +0.102        | +0.169        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +7.32     | +0.683        | +0.729        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +7.74     | +0.551        | +0.573        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 131 ms/op        | +13.16    | +15.143       | +15.306       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -9.23     | -0.226        | -0.199        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.79     | +0.003        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 101.0 ms/op      | +25.51    | +20.530       | +20.574       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 115 ms/op        | 115 ms/op        | -0.38     | -0.628        | -0.232        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.000 us/op      | 0.000 us/op      | -0.10     | -0.000        | +0.000        | same distribution                          | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.21    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 791 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 229 us/op        | 183 us/op        | -20.10    | -47.296       | -45.050       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 627 ms/op        | 578 ms/op        | -7.72     | -49.369       | -47.440       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 193 ms/op        | -10.33    | -22.830       | -21.577       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 408 ms/op        | -0.25     | -1.770        | -0.117        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 431 ms/op        | -2.41     | -14.117       | -6.592        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 638 ms/op        | 590 ms/op        | -7.58     | -50.870       | -45.867       | different distribution                     | NOT OK            |
| iceeccL.measureConsumeL~neBatchIterator | 226 ms/op        | 246 ms/op        | +8.98     | +19.723       | +20.833       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +2.32     | +0.141        | +0.163        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 549 ms/op        | 496 ms/op        | -9.79     | -53.968       | -53.584       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17 ms/op         | 21 ms/op         | +19.57    | +3.287        | +3.451        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 545 ms/op        | 505 ms/op        | -7.17     | -39.263       | -38.828       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 14.0 ms/op       | +21.12    | +2.431        | +2.470        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 32 us/op         | -19.42    | -7.676        | -7.559        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +0.16     | -0.018        | +0.056        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -3.93     | -6.372        | +4.834        | impossible to measure (1077 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +0.75     | -0.641        | +0.722        | impossible to measure (1074 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 532 us/op        | +0.21     | -2.029        | +4.231        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 504 us/op        | 483 us/op        | -4.03     | -22.831       | -17.702       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 335 us/op        | +6.17     | +16.822       | +21.951       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 301 us/op        | +1.41     | +2.945        | +5.242        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAvgAggregation   | 0 us/op          | 288 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icoaI.benchmarkIntervalSumAggregation   | 0 us/op          | 676 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74698e+09 ops/s| 3.29796e+08 ops/s| +429.72   | -1.41793e+09  | -1.41642e+09  | different distribution                     | OK                |
