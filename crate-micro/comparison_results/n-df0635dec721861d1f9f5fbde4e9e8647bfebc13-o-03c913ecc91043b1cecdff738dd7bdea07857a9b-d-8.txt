old version: 03c913ecc91043b1cecdff738dd7bdea07857a9b
new version: df0635dec721861d1f9f5fbde4e9e8647bfebc13
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -5.59     | -0.805        | -0.741        | different distribution                     | NOT OK            |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -3.09     | -0.324        | -0.280        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -6.15     | -0.464        | -0.431        | different distribution                     | NOT OK            |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.90     | +0.010        | +0.016        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +14.22    | +0.003        | +0.003        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.00000 us/op    | 0.00000 us/op    | +21.34    | +0.001        | +0.001        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | +19.50    | +0.004        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 113 ms/op        | -2.39     | -2.898        | -2.641        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -4.17     | -0.110        | -0.078        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -0.73     | -0.003        | -0.003        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 82.0 ms/op       | +1.93     | +1.539        | +1.564        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 114 ms/op        | -1.81     | -2.219        | -1.972        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -5.70     | -0.002        | -0.002        | different distribution                     | NOT OK            |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | +0.02     | +0.000        | +0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 784 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 227 us/op        | 224 us/op        | -1.49     | -4.535        | -2.008        | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 628 ms/op        | 633 ms/op        | +0.75     | +3.350        | +5.983        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 206 ms/op        | -4.26     | -9.229        | -9.055        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 410 ms/op        | 409 ms/op        | -0.20     | -1.579        | -0.131        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 440 ms/op        | -0.56     | -3.541        | -1.432        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 635 ms/op        | 604 ms/op        | -4.80     | -32.205       | -29.034       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 223 ms/op        | 231 ms/op        | +3.31     | +6.984        | +7.809        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.85     | +0.050        | +0.063        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 551 ms/op        | 554 ms/op        | +0.60     | +3.005        | +3.541        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.08     | -0.021        | -0.006        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 548 ms/op        | +0.39     | +1.867        | +2.381        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 13.0 ms/op       | +12.01    | +1.384        | +1.402        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | -0.20     | -0.133        | -0.019        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +0.67     | +0.046        | +0.137        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -6.17     | -6.848        | +4.913        | impossible to measure (1066 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +0.57     | -0.583        | +0.657        | impossible to measure (1043 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 544 us/op        | 537 us/op        | -1.34     | -11.000       | -3.522        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 504 us/op        | 503 us/op        | -0.36     | -4.178        | +0.620        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 322 us/op        | +2.28     | +6.086        | +8.248        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 294 us/op        | 296 us/op        | +0.63     | +1.510        | +2.207        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 669 us/op        | 690 us/op        | +3.21     | +16.509       | +26.648       | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74697e+09 ops/s| 1.74694e+09 ops/s| +0.00     | -5.03960e+04  | -1.66284e+04  | different distribution                     | OK                |
