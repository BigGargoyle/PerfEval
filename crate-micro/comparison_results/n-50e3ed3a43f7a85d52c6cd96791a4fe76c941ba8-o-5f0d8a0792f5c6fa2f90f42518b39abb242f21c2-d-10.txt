old version: 5f0d8a0792f5c6fa2f90f42518b39abb242f21c2
new version: 50e3ed3a43f7a85d52c6cd96791a4fe76c941ba8
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | +1.89     | +0.229        | +0.284        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +6.40     | +0.590        | +0.631        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +12.40    | +0.836        | +0.865        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 132 ms/op        | +16.47    | +18.313       | +18.871       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -3.09     | -0.076        | -0.057        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +2.01     | +0.008        | +0.008        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 101.0 ms/op      | +23.09    | +18.955       | +19.010       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | +0.41     | +0.397        | +0.538        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | +5.32     | +0.002        | +0.002        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.31    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 774 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 213 us/op        | 183 us/op        | -13.99    | -31.114       | -28.452       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 636 ms/op        | 577 ms/op        | -9.27     | -61.742       | -56.317       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 207 ms/op        | 193 ms/op        | -6.71     | -14.662       | -13.200       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 405 ms/op        | -0.86     | -4.658        | -2.318        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 429 ms/op        | -2.79     | -13.353       | -11.233       | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 609 ms/op        | 585 ms/op        | -3.99     | -25.609       | -23.029       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 244 ms/op        | +8.64     | +18.953       | +19.795       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +1.63     | +0.097        | +0.119        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 496 ms/op        | -10.47    | -58.264       | -57.754       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17 ms/op         | 21 ms/op         | +20.38    | +3.436        | +3.576        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 506 ms/op        | -7.63     | -42.005       | -41.600       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 14.0 ms/op       | +8.09     | +1.038        | +1.067        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 32 us/op         | -19.16    | -7.531        | -7.422        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -1.47     | -0.253        | -0.154        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | +1.36     | -5.674        | +6.124        | impossible to measure (1069 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 3 us/op          | +11.94    | -0.370        | +0.926        | impossible to measure (1170 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 532 us/op        | 535 us/op        | +0.66     | -1.201        | +8.365        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 509 us/op        | 483 us/op        | -5.18     | -29.126       | -23.203       | different distribution                     | NOT OK            |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 323 us/op        | 325 us/op        | +0.46     | -0.342        | +3.528        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 301 us/op        | +1.34     | +3.520        | +4.470        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 680 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74697e+09 ops/s| 3.29549e+08 ops/s| +430.11   | -1.41825e+09  | -1.41662e+09  | different distribution                     | OK                |
