old version: 50e3ed3a43f7a85d52c6cd96791a4fe76c941ba8
new version: 6a2b489d9b5691f9bc517e312c86814d4a4f8b07
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | -0.41     | -0.084        | -0.024        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | -0.17     | -0.034        | -0.001        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -0.51     | -0.048        | -0.023        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | -0.50     | -0.011        | -0.003        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.0000 us/op     | 0.0000 us/op     | +0.02     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.000000 us/op   | 0.000000 us/op   | -0.01     | -0.000        | -0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | -0.06     | -0.000        | +0.000        | same distribution                          | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 113 ms/op        | -0.12     | -0.270        | -0.004        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -1.93     | -0.055        | -0.030        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -0.42     | -0.002        | -0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | -0.02     | -0.031        | -0.002        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | -0.17     | -0.252        | -0.126        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | +0.09     | +0.000        | +0.000        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | -0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 779 us/op        | 774 us/op        | -0.65     | -8.406        | -1.917        | different distribution                     | OK                |
| iceeaA.measureAggregateCollector        | 214 us/op        | 213 us/op        | -0.81     | -3.431        | -0.078        | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 633 ms/op        | 636 ms/op        | +0.58     | +0.970        | +6.513        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 211 ms/op        | 207 ms/op        | -1.85     | -6.423        | -1.479        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 409 ms/op        | -0.11     | -1.408        | +0.466        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 441 ms/op        | -0.30     | -2.128        | -0.628        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 609 ms/op        | 609 ms/op        | -0.10     | -1.581        | +0.590        | same distribution                          | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 224 ms/op        | +0.21     | +0.177        | +0.763        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.25     | +0.010        | +0.023        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 554 ms/op        | -0.01     | -0.286        | +0.183        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.22     | -0.049        | -0.029        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 549 ms/op        | 548 ms/op        | -0.17     | -1.321        | -0.598        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | -0.36     | -0.062        | -0.034        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | -0.32     | -0.185        | -0.058        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +0.29     | -0.009        | +0.087        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | -1.89     | -5.398        | +5.303        | impossible to measure (1056 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +0.54     | -0.621        | +0.581        | impossible to measure (1046 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 547 us/op        | 532 us/op        | -2.73     | -20.326       | -9.483        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 506 us/op        | 509 us/op        | +0.68     | +0.885        | +6.163        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 321 us/op        | 323 us/op        | +0.74     | +0.990        | +3.690        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 296 us/op        | 297 us/op        | +0.34     | +0.402        | +1.539        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 689 us/op        | 680 us/op        | -1.26     | -13.694       | -3.152        | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74691e+09 ops/s| 1.74697e+09 ops/s| -0.00     | 4.04082e+04   | 7.95575e+04   | different distribution                     | OK                |
