old version: 270b1bd3db98ccd7e2427c7f5a8137d47477b5a1
new version: f6c3d156e826c811d2da170b8ae36f67be102e54
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -6.61     | -0.954        | -0.892        | different distribution                     | NOT OK            |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -2.15     | -0.225        | -0.189        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -5.42     | -0.405        | -0.382        | different distribution                     | NOT OK            |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.89     | +0.010        | +0.015        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +17.35    | +0.003        | +0.004        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.00000 us/op    | 0.00000 us/op    | +21.17    | +0.001        | +0.001        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | +18.28    | +0.004        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 113 ms/op        | -2.07     | -2.517        | -2.286        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -6.67     | -0.168        | -0.138        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -0.90     | -0.004        | -0.003        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 82.0 ms/op       | +2.03     | +1.619        | +1.648        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 115 ms/op        | 114 ms/op        | -1.21     | -1.516        | -1.294        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -5.52     | -0.002        | -0.002        | different distribution                     | NOT OK            |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | -0.08     | -0.000        | +0.000        | same distribution                          | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 791 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 229 us/op        | 227 us/op        | -1.01     | -3.339        | -1.184        | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 627 ms/op        | 631 ms/op        | +0.69     | +3.613        | +5.104        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 206 ms/op        | -4.04     | -8.986        | -8.282        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 408 ms/op        | -0.20     | -1.398        | -0.286        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 443 ms/op        | +0.43     | +0.720        | +3.150        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 638 ms/op        | 607 ms/op        | -4.81     | -32.597       | -28.999       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 226 ms/op        | 231 ms/op        | +2.46     | +5.018        | +5.976        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.38     | +0.019        | +0.032        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 549 ms/op        | 553 ms/op        | +0.74     | +3.867        | +4.297        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.13     | -0.031        | -0.016        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 545 ms/op        | 548 ms/op        | +0.67     | +3.430        | +3.911        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 13.0 ms/op       | +12.52    | +1.439        | +1.461        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.01     | -0.048        | +0.059        | same distribution                          | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +1.43     | +0.157        | +0.233        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 18 us/op         | +1.36     | -5.300        | +6.368        | impossible to measure (1070 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +0.03     | -0.611        | +0.650        | impossible to measure (1028 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 529 us/op        | -0.38     | -5.979        | +2.228        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 504 us/op        | 503 us/op        | -0.14     | -3.570        | +1.700        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 324 us/op        | +2.64     | +7.153        | +9.448        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 297 us/op        | +0.20     | -0.775        | +1.724        | same distribution                          | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 687 us/op        | +0.00     | +0.000        | +0.000        | only older samples                         | OK                |
| icoaI.benchmarkIntervalAvgAggregation   | 0 us/op          | 288 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icoaI.benchmarkIntervalSumAggregation   | 0 us/op          | 676 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74698e+09 ops/s| 1.74690e+09 ops/s| +0.00     | -1.02360e+05  | -6.31561e+04  | different distribution                     | OK                |
