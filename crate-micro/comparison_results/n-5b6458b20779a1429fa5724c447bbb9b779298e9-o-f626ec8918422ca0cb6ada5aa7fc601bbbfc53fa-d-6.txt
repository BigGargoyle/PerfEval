old version: f626ec8918422ca0cb6ada5aa7fc601bbbfc53fa
new version: 5b6458b20779a1429fa5724c447bbb9b779298e9
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -2.12     | -0.313        | -0.261        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -0.24     | -0.039        | -0.006        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | +0.08     | -0.006        | +0.017        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.07     | -0.002        | +0.004        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +0.88     | +0.000        | +0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.0000 us/op     | 0.0000 us/op     | -0.23     | -0.000        | -0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | +0.08     | -0.000        | +0.000        | same distribution                          | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 113 ms/op        | -0.06     | -0.198        | +0.052        | same distribution                          | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | +3.98     | +0.073        | +0.099        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.05     | -0.000        | +0.000        | same distribution                          | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | +0.05     | +0.024        | +0.057        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | +0.11     | +0.016        | +0.232        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.00 us/op       | 0.00 us/op       | +1.90     | +0.000        | +0.001        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | -0.16     | -0.000        | -0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 772 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 212 us/op        | 227 us/op        | +6.79     | +12.985       | +15.970       | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 633 ms/op        | 630 ms/op        | -0.42     | -3.312        | -2.006        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 206 ms/op        | 206 ms/op        | -0.16     | -0.484        | -0.187        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 411 ms/op        | 409 ms/op        | -0.30     | -2.183        | -0.261        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 441 ms/op        | -0.17     | -1.721        | +0.223        | same distribution                          | OK                |
| iceeaG.measureGroupByMinString          | 608 ms/op        | 612 ms/op        | +0.65     | +2.913        | +5.058        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 225 ms/op        | 231 ms/op        | +2.76     | +5.797        | +6.674        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.26     | +0.011        | +0.023        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 554 ms/op        | +0.01     | -0.172        | +0.259        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | +0.03     | -0.005        | +0.017        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 548 ms/op        | +0.08     | +0.184        | +0.641        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | +0.10     | -0.003        | +0.028        | same distribution                          | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.20     | +0.011        | +0.150        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +0.22     | -0.011        | +0.067        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | -1.43     | -5.532        | +5.010        | impossible to measure (1052 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -0.36     | -0.647        | +0.631        | impossible to measure (1052 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 527 us/op        | -0.78     | -7.919        | -0.236        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 505 us/op        | 506 us/op        | +0.09     | -1.429        | +2.343        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 323 us/op        | 321 us/op        | -0.57     | -3.330        | -0.529        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 298 us/op        | -0.11     | -1.043        | +0.430        | same distribution                          | OK                |
| icoaI.benchmarkIntervalAggregation      | 684 us/op        | 685 us/op        | +0.20     | -4.767        | +7.175        | same distribution                          | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74690e+09 ops/s| 1.74694e+09 ops/s| -0.00     | 1.41354e+04   | 5.54382e+04   | different distribution                     | OK                |
