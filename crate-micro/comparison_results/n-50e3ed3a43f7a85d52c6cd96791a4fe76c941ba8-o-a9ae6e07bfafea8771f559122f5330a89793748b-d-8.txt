old version: a9ae6e07bfafea8771f559122f5330a89793748b
new version: 50e3ed3a43f7a85d52c6cd96791a4fe76c941ba8
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | +4.04     | +0.514        | +0.576        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +8.95     | +0.831        | +0.873        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +14.05    | +0.949        | +0.976        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 131 ms/op        | +15.91    | +17.854       | +18.078       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -3.40     | -0.084        | -0.064        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +1.92     | +0.007        | +0.008        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 101.0 ms/op      | +23.00    | +18.885       | +18.929       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 115 ms/op        | +1.07     | +1.028        | +1.401        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.000 us/op      | 0.000 us/op      | +5.67     | +0.002        | +0.002        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.30    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 774 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 213 us/op        | 183 us/op        | -13.82    | -30.925       | -27.918       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 636 ms/op        | 578 ms/op        | -9.10     | -60.726       | -55.320       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 207 ms/op        | 193 ms/op        | -7.03     | -15.543       | -13.587       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 408 ms/op        | -0.26     | -2.127        | +0.094        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 431 ms/op        | -2.35     | -14.042       | -6.779        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 609 ms/op        | 590 ms/op        | -3.11     | -20.667       | -16.976       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 246 ms/op        | +9.75     | +21.282       | +22.431       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +1.42     | +0.084        | +0.105        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 496 ms/op        | -10.56    | -58.747       | -58.307       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17 ms/op         | 21 ms/op         | +19.76    | +3.322        | +3.477        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 505 ms/op        | -7.70     | -42.371       | -41.966       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 14.0 ms/op       | +8.04     | +1.025        | +1.068        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 32 us/op         | -19.10    | -7.524        | -7.390        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -1.40     | -0.241        | -0.151        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | +1.22     | -5.442        | +5.546        | impossible to measure (1125 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +4.38     | -0.491        | +0.803        | impossible to measure (1043 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 532 us/op        | 532 us/op        | -0.04     | -4.372        | +4.215        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 509 us/op        | 483 us/op        | -5.12     | -28.536       | -23.927       | different distribution                     | NOT OK            |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 323 us/op        | 335 us/op        | +3.50     | +8.712        | +13.905       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 301 us/op        | +1.12     | +2.815        | +3.899        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 680 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74697e+09 ops/s| 3.29796e+08 ops/s| +429.71   | -1.41795e+09  | -1.41644e+09  | different distribution                     | OK                |
