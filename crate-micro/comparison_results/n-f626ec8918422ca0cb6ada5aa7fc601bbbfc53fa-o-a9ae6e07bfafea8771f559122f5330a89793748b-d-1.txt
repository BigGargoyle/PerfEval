old version: a9ae6e07bfafea8771f559122f5330a89793748b
new version: f626ec8918422ca0cb6ada5aa7fc601bbbfc53fa
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 13.0 us/op       | 14.0 us/op       | +6.35     | +0.814        | +0.864        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 9.0 us/op        | 10.0 us/op       | +9.29     | +0.864        | +0.901        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +13.92    | +0.942        | +0.968        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 131 ms/op        | +15.97    | +17.929       | +18.128       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -7.74     | -0.186        | -0.165        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +1.65     | +0.006        | +0.007        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 101.0 ms/op      | +22.94    | +18.839       | +18.886       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 115 ms/op        | +0.69     | +0.605        | +1.006        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.00 us/op       | 0.00 us/op       | +3.80     | +0.001        | +0.002        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.31    | +0.002        | +0.002        | different distribution                     | OK                |
| iceeaA.measureAggregateCollector        | 227 us/op        | 183 us/op        | -19.06    | -44.295       | -42.016       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 630 ms/op        | 578 ms/op        | -8.21     | -52.529       | -50.947       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 206 ms/op        | 193 ms/op        | -6.32     | -13.659       | -12.384       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 408 ms/op        | -0.44     | -2.653        | -0.980        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 431 ms/op        | -2.43     | -14.541       | -7.337        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 612 ms/op        | 590 ms/op        | -3.57     | -23.869       | -19.952       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 231 ms/op        | 246 ms/op        | +6.43     | +14.251       | +15.467       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +1.76     | +0.107        | +0.128        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 496 ms/op        | -10.52    | -58.459       | -58.058       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17 ms/op         | 21 ms/op         | +19.54    | +3.292        | +3.439        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 505 ms/op        | -7.81     | -43.084       | -42.613       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 14.0 ms/op       | +7.75     | +0.987        | +1.034        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 32 us/op         | -19.27    | -7.596        | -7.481        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -0.38     | -0.097        | -0.010        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | +2.92     | -5.472        | +6.616        | impossible to measure (1052 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +3.58     | -0.558        | +0.667        | impossible to measure (1066 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 527 us/op        | 532 us/op        | +0.92     | +1.561        | +8.366        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 506 us/op        | 483 us/op        | -4.40     | -24.366       | -20.102       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 321 us/op        | 335 us/op        | +4.27     | +11.024       | +16.348       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 301 us/op        | +0.99     | +2.413        | +3.502        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 685 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74694e+09 ops/s| 3.29796e+08 ops/s| +429.70   | -1.41790e+09  | -1.41642e+09  | different distribution                     | OK                |
