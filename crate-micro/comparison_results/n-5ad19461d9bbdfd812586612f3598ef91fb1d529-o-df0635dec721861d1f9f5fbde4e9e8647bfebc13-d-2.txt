old version: df0635dec721861d1f9f5fbde4e9e8647bfebc13
new version: 5ad19461d9bbdfd812586612f3598ef91fb1d529
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | +0.95     | +0.099        | +0.158        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +1.83     | +0.154        | +0.197        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | +1.23     | +0.067        | +0.106        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.21     | -0.000        | +0.006        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.00000 us/op    | 0.00000 us/op    | +0.08     | +0.000        | +0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | -0.96     | -0.000        | -0.000        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 116 ms/op        | +0.23     | +0.184        | +0.362        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | +0.63     | -0.004        | +0.030        | same distribution                          | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.20     | +0.000        | +0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 81.0 ms/op       | -0.13     | -0.150        | -0.055        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 116 ms/op        | +0.15     | +0.027        | +0.327        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | +0.11     | +0.000        | +0.000        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | +0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 789 us/op        | 784 us/op        | -0.61     | -7.846        | -1.827        | different distribution                     | OK                |
| iceeaA.measureAggregateCollector        | 226 us/op        | 227 us/op        | +0.44     | -0.116        | +2.095        | same distribution                          | OK                |
| iceeaG.measureGroupBySumLong            | 626 ms/op        | 628 ms/op        | +0.43     | +1.616        | +3.635        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215.0 ms/op      | 215.0 ms/op      | +0.03     | +0.023        | +0.115        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 410 ms/op        | 410 ms/op        | +0.03     | -0.995        | +1.143        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 442 ms/op        | +0.23     | -0.059        | +2.107        | same distribution                          | OK                |
| iceeaG.measureGroupByMinString          | 639 ms/op        | 635 ms/op        | -0.60     | -6.308        | -1.268        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 223 ms/op        | -0.45     | -1.469        | -0.560        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.00     | -0.006        | +0.007        | same distribution                          | OK                |
| iceedmS.measureListSort                 | 552 ms/op        | 551 ms/op        | -0.24     | -1.946        | -0.724        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.03     | -0.015        | +0.003        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 546 ms/op        | -0.02     | -0.369        | +0.208        | same distribution                          | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.00 ms/op      | 12.00 ms/op      | +0.03     | +0.003        | +0.004        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39.0 us/op       | 39.0 us/op       | +0.86     | +0.285        | +0.385        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +1.62     | +0.185        | +0.259        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 18 us/op         | +2.66     | -5.247        | +5.987        | impossible to measure (1077 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +1.24     | -0.627        | +0.659        | impossible to measure (1068 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 538 us/op        | 544 us/op        | +1.13     | +2.603        | +9.550        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 498 us/op        | 504 us/op        | +1.22     | +4.134        | +8.134        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 316 us/op        | 315 us/op        | -0.39     | -2.723        | +0.050        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 295 us/op        | 294 us/op        | -0.05     | -0.598        | +0.298        | same distribution                          | OK                |
| icoaI.benchmarkIntervalAggregation      | 684 us/op        | 669 us/op        | -2.22     | -20.651       | -10.083       | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74702e+09 ops/s| 1.74697e+09 ops/s| +0.00     | -6.94871e+04  | -3.93090e+04  | different distribution                     | OK                |
