old version: f626ec8918422ca0cb6ada5aa7fc601bbbfc53fa
new version: da83f1eb1d70462d326946a8aa46955e81080f7f
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 13.0 us/op       | 13.0 us/op       | -1.09     | -0.168        | -0.123        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 9.0 us/op        | 9.0 us/op        | +0.93     | +0.069        | +0.105        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | +1.58     | +0.096        | +0.118        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.04     | -0.002        | +0.004        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.0000 us/op     | 0.0000 us/op     | -0.23     | -0.000        | -0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | +0.13     | +0.000        | +0.000        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 113 ms/op        | -0.10     | -0.244        | +0.032        | same distribution                          | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | +5.42     | +0.105        | +0.129        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.16     | +0.000        | +0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | +0.05     | +0.026        | +0.057        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | +0.25     | +0.157        | +0.414        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.00 us/op       | 0.00 us/op       | +1.94     | +0.000        | +0.001        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | +0.02     | +0.000        | +0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 776 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 216 us/op        | 227 us/op        | +5.02     | +9.398        | +12.256       | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 634 ms/op        | 630 ms/op        | -0.56     | -4.328        | -2.764        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 207 ms/op        | 206 ms/op        | -0.73     | -2.203        | -0.816        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 409 ms/op        | +0.03     | -0.642        | +0.858        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 444 ms/op        | 441 ms/op        | -0.50     | -3.491        | -0.986        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 606 ms/op        | 612 ms/op        | +0.89     | +4.357        | +6.373        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 225 ms/op        | 231 ms/op        | +2.64     | +5.490        | +6.365        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.17     | +0.004        | +0.017        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 554 ms/op        | -0.01     | -0.258        | +0.173        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | +0.13     | +0.013        | +0.033        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 548 ms/op        | +0.00     | -0.252        | +0.274        | same distribution                          | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | +0.32     | +0.028        | +0.058        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | -0.34     | -0.196        | -0.068        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -1.34     | -0.236        | -0.144        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | -3.71     | -6.286        | +4.551        | impossible to measure (1071 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +2.40     | -0.540        | +0.690        | impossible to measure (1045 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 527 us/op        | -0.82     | -8.320        | -0.493        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 505 us/op        | 506 us/op        | +0.08     | -1.826        | +2.833        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 324 us/op        | 321 us/op        | -0.80     | -4.095        | -1.167        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 298 us/op        | +0.13     | -0.360        | +1.137        | same distribution                          | OK                |
| icoaI.benchmarkIntervalAggregation      | 685 us/op        | 685 us/op        | +0.01     | -5.560        | +6.492        | same distribution                          | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74693e+09 ops/s| 1.74694e+09 ops/s| -0.00     | -1.49565e+04  | 2.42013e+04   | same distribution                          | OK                |
