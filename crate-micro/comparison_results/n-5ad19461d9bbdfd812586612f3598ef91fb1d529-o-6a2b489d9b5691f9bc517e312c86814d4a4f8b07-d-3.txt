old version: 6a2b489d9b5691f9bc517e312c86814d4a4f8b07
new version: 5ad19461d9bbdfd812586612f3598ef91fb1d529
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | -0.68     | -0.123        | -0.064        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | -0.25     | -0.040        | -0.008        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -4.13     | -0.313        | -0.280        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +1.44     | +0.017        | +0.023        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +14.74    | +0.003        | +0.003        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.00000 us/op    | 0.00000 us/op    | +21.44    | +0.001        | +0.001        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | +18.51    | +0.004        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 113 ms/op        | -2.15     | -2.597        | -2.370        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -2.67     | -0.075        | -0.046        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -0.47     | -0.002        | -0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 82.0 ms/op       | +1.86     | +1.451        | +1.548        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 114 ms/op        | -1.51     | -1.859        | -1.632        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -5.47     | -0.002        | -0.002        | different distribution                     | NOT OK            |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | +0.03     | +0.000        | +0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 789 us/op        | 779 us/op        | -1.35     | -14.200       | -7.053        | different distribution                     | OK                |
| iceeaA.measureAggregateCollector        | 226 us/op        | 214 us/op        | -5.25     | -13.450       | -10.295       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 626 ms/op        | 633 ms/op        | +1.12     | +6.213        | +7.742        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 211 ms/op        | -1.72     | -6.059        | -1.014        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 410 ms/op        | 409 ms/op        | -0.17     | -1.721        | +0.299        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 442 ms/op        | +0.30     | +0.406        | +2.129        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 639 ms/op        | 609 ms/op        | -4.59     | -31.432       | -27.330       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 224 ms/op        | -0.31     | -1.051        | -0.318        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.74     | +0.042        | +0.055        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 552 ms/op        | 554 ms/op        | +0.34     | +1.309        | +2.385        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.01     | -0.010        | +0.007        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 549 ms/op        | +0.55     | +2.592        | +3.317        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 13.0 ms/op       | +12.45    | +1.434        | +1.454        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.48     | +0.131        | +0.240        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +1.70     | +0.191        | +0.272        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -0.78     | -6.051        | +5.780        | impossible to measure (1060 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -3.21     | -0.674        | +0.578        | impossible to measure (1014 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 538 us/op        | 547 us/op        | +1.67     | +4.832        | +13.457       | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 498 us/op        | 506 us/op        | +1.55     | +5.642        | +10.283       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 316 us/op        | 321 us/op        | +1.55     | +3.192        | +6.540        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 295 us/op        | 296 us/op        | +0.61     | +1.256        | +2.282        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 684 us/op        | 689 us/op        | +0.79     | -0.714        | +10.798       | same distribution                          | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74702e+09 ops/s| 1.74691e+09 ops/s| +0.01     | -1.29150e+05  | -9.01392e+04  | different distribution                     | OK                |
