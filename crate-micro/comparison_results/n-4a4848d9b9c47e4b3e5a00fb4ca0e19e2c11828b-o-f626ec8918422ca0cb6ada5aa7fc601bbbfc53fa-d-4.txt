old version: f626ec8918422ca0cb6ada5aa7fc601bbbfc53fa
new version: 4a4848d9b9c47e4b3e5a00fb4ca0e19e2c11828b
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 13.0 us/op       | 13.0 us/op       | -1.18     | -0.181        | -0.134        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 9.0 us/op        | 9.0 us/op        | +0.98     | +0.073        | +0.112        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | +1.32     | +0.076        | +0.101        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | -0.13     | -0.006        | +0.002        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +0.66     | +0.000        | +0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.0000 us/op     | 0.0000 us/op     | -0.23     | -0.000        | -0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | +0.13     | -0.000        | +0.000        | same distribution                          | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 114 ms/op        | 113 ms/op        | -0.60     | -0.802        | -0.545        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | +5.71     | +0.110        | +0.135        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.19     | +0.000        | +0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | -0.01     | -0.023        | +0.008        | same distribution                          | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | +0.32     | +0.277        | +0.448        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.00 us/op       | 0.00 us/op       | +1.89     | +0.000        | +0.001        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | -0.22     | -0.000        | -0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 775 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 215 us/op        | 227 us/op        | +5.28     | +10.060       | +12.725       | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 631 ms/op        | 630 ms/op        | -0.14     | -1.428        | -0.389        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 208 ms/op        | 206 ms/op        | -1.37     | -3.619        | -2.158        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 409 ms/op        | +0.10     | -0.302        | +1.149        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 444 ms/op        | 441 ms/op        | -0.60     | -4.473        | -1.027        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 608 ms/op        | 612 ms/op        | +0.62     | +2.642        | +4.893        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 231 ms/op        | +3.05     | +6.432        | +7.249        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.03     | -0.004        | +0.009        | same distribution                          | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 554 ms/op        | -0.05     | -0.494        | -0.100        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | +0.19     | +0.024        | +0.043        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 549 ms/op        | 548 ms/op        | -0.06     | -0.553        | -0.081        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | +0.09     | -0.006        | +0.026        | same distribution                          | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | -0.00     | -0.053        | +0.057        | same distribution                          | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -0.62     | -0.131        | -0.037        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | -3.47     | -5.724        | +5.794        | impossible to measure (1055 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -0.93     | -0.693        | +0.655        | impossible to measure (1033 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 540 us/op        | 527 us/op        | -2.37     | -16.699       | -8.475        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 500 us/op        | 506 us/op        | +1.08     | +3.340        | +7.252        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 320 us/op        | 321 us/op        | +0.25     | -0.671        | +2.316        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 298 us/op        | -0.08     | -0.978        | +0.475        | same distribution                          | OK                |
| icoaI.benchmarkIntervalAggregation      | 696 us/op        | 685 us/op        | -1.60     | -17.122       | -5.226        | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74690e+09 ops/s| 1.74694e+09 ops/s| -0.00     | 1.77836e+04   | 5.53761e+04   | different distribution                     | OK                |
