old version: 30081686c6e38b3b20817d86a3a38eb652c8625a
new version: 5ad19461d9bbdfd812586612f3598ef91fb1d529
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | +0.84     | +0.089        | +0.143        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +0.79     | +0.057        | +0.094        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | +0.18     | -0.005        | +0.029        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | -0.06     | -0.004        | +0.002        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | -2.27     | -0.001        | -0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.00000 us/op    | 0.00000 us/op    | +0.02     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | +0.89     | +0.000        | +0.000        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 116 ms/op        | +0.05     | -0.013        | +0.136        | same distribution                          | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | +2.78     | +0.045        | +0.082        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.43     | +0.001        | +0.002        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81 ms/op         | 81 ms/op         | -0.15     | -0.174        | -0.072        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 116 ms/op        | +0.16     | +0.051        | +0.322        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.000 us/op      | 0.000 us/op      | -0.21     | -0.000        | -0.000        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | +0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 789 us/op        | 788 us/op        | -0.17     | -3.971        | +1.706        | same distribution                          | OK                |
| iceeaA.measureAggregateCollector        | 226 us/op        | 230 us/op        | +1.40     | +2.217        | +4.036        | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 626 ms/op        | 629 ms/op        | +0.50     | +2.151        | +4.179        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215.0 ms/op      | 215.0 ms/op      | +0.04     | +0.050        | +0.142        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 410 ms/op        | 409 ms/op        | -0.20     | -1.845        | +0.278        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 443 ms/op        | +0.37     | +0.731        | +2.707        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 639 ms/op        | 639 ms/op        | -0.01     | -2.665        | +2.639        | same distribution                          | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 226 ms/op        | +0.56     | +0.774        | +1.705        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.13     | +0.002        | +0.015        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 552 ms/op        | 552 ms/op        | -0.09     | -1.308        | +0.330        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.04     | -0.016        | +0.000        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 546 ms/op        | +0.12     | +0.409        | +0.872        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.000 ms/op     | 12.000 ms/op     | +0.00     | +0.000        | +0.001        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 40 us/op         | +1.59     | +0.556        | +0.680        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +3.30     | +0.413        | +0.487        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -0.93     | -5.601        | +5.786        | impossible to measure (1096 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -0.42     | -0.632        | +0.559        | impossible to measure (1035 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 538 us/op        | 534 us/op        | -0.70     | -6.964        | -0.472        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 498 us/op        | 500 us/op        | +0.37     | -0.508        | +4.463        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 316 us/op        | 315 us/op        | -0.46     | -3.036        | -0.190        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 295 us/op        | 294 us/op        | -0.29     | -1.309        | -0.354        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 684 us/op        | 684 us/op        | +0.04     | -5.767        | +6.227        | same distribution                          | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74702e+09 ops/s| 1.74684e+09 ops/s| +0.01     | -2.03378e+05  | -1.71545e+05  | different distribution                     | OK                |
