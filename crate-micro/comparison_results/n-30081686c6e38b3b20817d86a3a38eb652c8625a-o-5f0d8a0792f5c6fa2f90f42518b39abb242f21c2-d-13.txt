old version: 5f0d8a0792f5c6fa2f90f42518b39abb242f21c2
new version: 30081686c6e38b3b20817d86a3a38eb652c8625a
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | -0.06     | -0.036        | +0.017        | same distribution                          | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +5.12     | +0.471        | +0.513        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +7.02     | +0.489        | +0.522        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 132 ms/op        | +13.77    | +15.645       | +16.216       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -10.01    | -0.249        | -0.218        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.67     | +0.002        | +0.003        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 101.0 ms/op      | +25.55    | +20.563       | +20.619       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 114 ms/op        | -1.43     | -1.752        | -1.547        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.000 us/op      | 0.000 us/op      | -0.14     | -0.000        | +0.000        | same distribution                          | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.33    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 788 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 230 us/op        | 183 us/op        | -20.28    | -47.390       | -45.753       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 629 ms/op        | 577 ms/op        | -8.18     | -52.556       | -50.442       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 215.0 ms/op      | 193.0 ms/op      | -10.05    | -21.643       | -21.561       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 405 ms/op        | -0.94     | -4.707        | -2.912        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 443 ms/op        | 429 ms/op        | -3.16     | -15.196       | -12.978       | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 639 ms/op        | 585 ms/op        | -8.47     | -56.190       | -52.052       | different distribution                     | NOT OK            |
| iceeccL.measureConsumeL~neBatchIterator | 226 ms/op        | 244 ms/op        | +7.92     | +17.446       | +18.351       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +2.51     | +0.155        | +0.176        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 552 ms/op        | 496 ms/op        | -10.09    | -56.313       | -55.035       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17 ms/op         | 21 ms/op         | +20.16    | +3.402        | +3.548        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 506 ms/op        | -7.39     | -40.600       | -40.191       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 14.0 ms/op       | +21.11    | +2.437        | +2.462        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 40 us/op         | 32 us/op         | -20.30    | -8.104        | -7.977        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -2.71     | -0.424        | -0.334        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | -0.40     | -5.485        | +5.975        | impossible to measure (1071 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 3 us/op          | +9.39     | -0.428        | +0.928        | impossible to measure (1143 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 534 us/op        | 535 us/op        | +0.25     | -2.861        | +5.352        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 500 us/op        | 483 us/op        | -3.40     | -20.521       | -13.411       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 325 us/op        | +3.25     | +8.573        | +11.927       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 294 us/op        | 301 us/op        | +2.60     | +7.398        | +7.856        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 684 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74684e+09 ops/s| 3.29549e+08 ops/s| +430.07   | -1.41799e+09  | -1.41658e+09  | different distribution                     | OK                |
