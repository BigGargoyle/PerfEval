old version: a9ae6e07bfafea8771f559122f5330a89793748b
new version: 5b6458b20779a1429fa5724c447bbb9b779298e9
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | +4.09     | +0.519        | +0.583        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +9.04     | +0.842        | +0.876        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +14.01    | +0.949        | +0.974        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 131 ms/op        | +15.90    | +17.850       | +18.074       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -4.06     | -0.098        | -0.078        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +1.70     | +0.006        | +0.007        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 101.0 ms/op      | +23.00    | +18.881       | +18.927       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 115 ms/op        | +0.81     | +0.717        | +1.141        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.000 us/op      | 0.000 us/op      | +5.77     | +0.002        | +0.002        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.13    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 772 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 212 us/op        | 183 us/op        | -13.56    | -30.232       | -26.872       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 633 ms/op        | 578 ms/op        | -8.59     | -55.330       | -53.433       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 206 ms/op        | 193 ms/op        | -6.47     | -13.969       | -12.684       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 411 ms/op        | 408 ms/op        | -0.74     | -4.192        | -1.901        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 431 ms/op        | -2.59     | -15.394       | -7.855        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 608 ms/op        | 590 ms/op        | -2.94     | -19.671       | -16.112       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 225 ms/op        | 246 ms/op        | +9.37     | +20.543       | +21.679       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +2.02     | +0.123        | +0.143        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 496 ms/op        | -10.51    | -58.393       | -58.028       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17 ms/op         | 21 ms/op         | +19.58    | +3.303        | +3.444        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 505 ms/op        | -7.74     | -42.643       | -42.191       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 14.0 ms/op       | +7.86     | +1.003        | +1.045        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 32 us/op         | -19.11    | -7.528        | -7.404        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -0.16     | -0.066        | +0.025        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | +1.45     | -5.555        | +5.046        | impossible to measure (1074 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +3.21     | -0.542        | +0.774        | impossible to measure (1046 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 532 us/op        | +0.14     | -2.377        | +4.179        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 505 us/op        | 483 us/op        | -4.32     | -23.757       | -19.720       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 323 us/op        | 335 us/op        | +3.67     | +9.115        | +14.563       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 301 us/op        | +0.88     | +2.065        | +3.158        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 684 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74690e+09 ops/s| 3.29796e+08 ops/s| +429.69   | -1.41780e+09  | -1.41639e+09  | different distribution                     | OK                |
