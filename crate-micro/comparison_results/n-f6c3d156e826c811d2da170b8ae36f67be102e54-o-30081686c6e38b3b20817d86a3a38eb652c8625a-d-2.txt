old version: 30081686c6e38b3b20817d86a3a38eb652c8625a
new version: f6c3d156e826c811d2da170b8ae36f67be102e54
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | -1.06     | -0.179        | -0.118        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | -0.30     | -0.053        | -0.006        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -0.78     | -0.070        | -0.044        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | -0.03     | -0.003        | +0.002        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | -0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.0000 us/op     | 0.0000 us/op     | -0.20     | -0.000        | -0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | +0.47     | -0.000        | +0.000        | same distribution                          | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 116 ms/op        | -0.06     | -0.155        | +0.019        | same distribution                          | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | +1.20     | +0.007        | +0.046        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.21     | +0.000        | +0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 81.0 ms/op       | +0.05     | +0.028        | +0.054        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 115 ms/op        | 116 ms/op        | +0.42     | +0.347        | +0.618        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -0.30     | -0.000        | -0.000        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | -0.10     | -0.000        | -0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 791 us/op        | 788 us/op        | -0.33     | -5.640        | +0.570        | same distribution                          | OK                |
| iceeaA.measureAggregateCollector        | 229 us/op        | 230 us/op        | +0.03     | -0.951        | +0.961        | same distribution                          | OK                |
| iceeaG.measureGroupBySumLong            | 627 ms/op        | 629 ms/op        | +0.31     | +0.820        | +2.988        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215.0 ms/op      | 215.0 ms/op      | +0.03     | +0.010        | +0.104        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 409 ms/op        | +0.09     | -0.194        | +0.942        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 443 ms/op        | +0.31     | +0.372        | +2.354        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 638 ms/op        | 639 ms/op        | +0.06     | -2.270        | +2.793        | same distribution                          | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 226 ms/op        | 226 ms/op        | -0.05     | -0.523        | +0.366        | same distribution                          | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.03     | -0.004        | +0.008        | same distribution                          | OK                |
| iceedmS.measureListSort                 | 549 ms/op        | 552 ms/op        | +0.44     | +1.800        | +3.117        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | +0.03     | -0.002        | +0.011        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithSort   | 545 ms/op        | 546 ms/op        | +0.32     | +1.527        | +1.998        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.00 ms/op      | 12.00 ms/op      | +0.06     | +0.005        | +0.009        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 40 us/op         | +1.03     | +0.348        | +0.462        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +2.88     | +0.352        | +0.437        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -3.41     | -6.315        | +4.465        | impossible to measure (1053 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -1.23     | -0.684        | +0.653        | impossible to measure (1073 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 534 us/op        | +0.66     | -0.401        | +7.298        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 504 us/op        | 500 us/op        | -0.71     | -6.657        | -0.434        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 315 us/op        | -0.19     | -1.281        | +0.082        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 294 us/op        | -0.94     | -3.990        | -1.878        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 684 us/op        | +0.00     | +0.000        | +0.000        | only older samples                         | OK                |
| icoaI.benchmarkIntervalAvgAggregation   | 0 us/op          | 288 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icoaI.benchmarkIntervalSumAggregation   | 0 us/op          | 676 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74698e+09 ops/s| 1.74684e+09 ops/s| +0.01     | -1.62501e+05  | -1.30936e+05  | different distribution                     | OK                |
