old version: a9ae6e07bfafea8771f559122f5330a89793748b
new version: 5ad19461d9bbdfd812586612f3598ef91fb1d529
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | +2.91     | +0.371        | +0.425        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +8.49     | +0.793        | +0.832        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +8.77     | +0.612        | +0.645        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 131 ms/op        | +13.28    | +15.278       | +15.429       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -7.80     | -0.191        | -0.164        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +1.01     | +0.004        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 101.0 ms/op      | +25.26    | +20.340       | +20.439       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 115 ms/op        | -0.63     | -0.932        | -0.521        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.000 us/op      | 0.000 us/op      | -0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.33    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 789 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 226 us/op        | 183 us/op        | -19.00    | -44.123       | -41.899       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 626 ms/op        | 578 ms/op        | -7.55     | -48.128       | -46.323       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 193 ms/op        | -10.32    | -22.784       | -21.515       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 410 ms/op        | 408 ms/op        | -0.54     | -3.405        | -1.071        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 431 ms/op        | -2.35     | -14.314       | -6.883        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 639 ms/op        | 590 ms/op        | -7.64     | -51.262       | -46.101       | different distribution                     | NOT OK            |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 246 ms/op        | +9.64     | +21.008       | +22.303       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +2.42     | +0.148        | +0.170        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 552 ms/op        | 496 ms/op        | -10.27    | -57.302       | -56.145       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17 ms/op         | 21 ms/op         | +19.48    | +3.280        | +3.434        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 505 ms/op        | -7.36     | -40.404       | -39.908       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 14.0 ms/op       | +21.05    | +2.423        | +2.464        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 32 us/op         | -18.97    | -7.451        | -7.344        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +0.57     | +0.042        | +0.113        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -1.47     | -5.891        | +4.777        | impossible to measure (1043 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +1.58     | -0.594        | +0.599        | impossible to measure (1052 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 538 us/op        | 532 us/op        | -1.15     | -8.745        | -3.463        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 498 us/op        | 483 us/op        | -2.99     | -17.100       | -12.930       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 316 us/op        | 335 us/op        | +5.88     | +15.785       | +21.927       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 295 us/op        | 301 us/op        | +2.08     | +5.608        | +6.588        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 684 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74702e+09 ops/s| 3.29796e+08 ops/s| +429.73   | -1.41795e+09  | -1.41647e+09  | different distribution                     | OK                |
