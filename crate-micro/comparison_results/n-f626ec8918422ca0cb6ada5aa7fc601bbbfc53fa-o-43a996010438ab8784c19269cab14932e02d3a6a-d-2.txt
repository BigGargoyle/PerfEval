old version: 43a996010438ab8784c19269cab14932e02d3a6a
new version: f626ec8918422ca0cb6ada5aa7fc601bbbfc53fa
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 13.0 us/op       | 14.0 us/op       | +5.84     | +0.746        | +0.802        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 9.0 us/op        | 10.0 us/op       | +9.66     | +0.896        | +0.938        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +13.89    | +0.938        | +0.966        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 131 ms/op        | +15.76    | +17.684       | +17.919       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -6.48     | -0.158        | -0.136        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +1.67     | +0.006        | +0.007        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 101.0 ms/op      | +22.93    | +18.837       | +18.884       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 115 ms/op        | +0.65     | +0.507        | +0.974        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.00 us/op       | 0.00 us/op       | +3.56     | +0.001        | +0.002        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.44    | +0.002        | +0.002        | different distribution                     | OK                |
| iceeaA.measureAggregateCollector        | 227 us/op        | 182 us/op        | -19.64    | -45.418       | -43.475       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 630 ms/op        | 580 ms/op        | -7.97     | -51.115       | -49.301       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 206 ms/op        | 192 ms/op        | -6.49     | -14.045       | -12.560       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 406 ms/op        | -0.92     | -4.464        | -3.089        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 424 ms/op        | -3.97     | -21.170       | -13.773       | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 612 ms/op        | 586 ms/op        | -4.24     | -27.130       | -24.720       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 231 ms/op        | 247 ms/op        | +6.81     | +15.083       | +16.397       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +2.18     | +0.134        | +0.155        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 496 ms/op        | -10.46    | -58.137       | -57.703       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 21.0 ms/op       | +21.79    | +3.704        | +3.798        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 506 ms/op        | -7.68     | -42.348       | -41.846       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 14.0 ms/op       | +7.66     | +0.985        | +1.011        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 32 us/op         | -19.43    | -7.661        | -7.548        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +0.15     | -0.025        | +0.065        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | +4.08     | -4.939        | +6.050        | impossible to measure (1068 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +1.38     | -0.598        | +0.623        | impossible to measure (1068 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 527 us/op        | 524 us/op        | -0.57     | -7.412        | +1.305        | same distribution                          | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 506 us/op        | 483 us/op        | -4.48     | -24.859       | -20.419       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 321 us/op        | 332 us/op        | +3.27     | +7.927        | +13.428       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 301 us/op        | +1.16     | +2.939        | +4.019        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 685 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74694e+09 ops/s| 3.26932e+08 ops/s| +434.34   | -1.42086e+09  | -1.41908e+09  | different distribution                     | OK                |
