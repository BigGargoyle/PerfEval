old version: 5f0d8a0792f5c6fa2f90f42518b39abb242f21c2
new version: 5b6458b20779a1429fa5724c447bbb9b779298e9
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | +1.95     | +0.239        | +0.290        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 10.0 us/op       | +6.48     | +0.599        | +0.633        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 8.0 us/op        | +12.37    | +0.833        | +0.861        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 0 us/op          | 1 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_Long_parseLong_valid       | 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0 us/op          | 0 us/op          | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 132 ms/op        | +16.46    | +18.298       | +18.895       | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -3.75     | -0.091        | -0.070        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +1.79     | +0.007        | +0.007        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 101.0 ms/op      | +23.09    | +18.954       | +19.011       | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | +0.15     | +0.065        | +0.281        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | +5.42     | +0.002        | +0.002        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.000 us/op      | 0.000 us/op      | +11.13    | +0.002        | +0.002        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 772 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 212 us/op        | 183 us/op        | -13.73    | -30.397       | -27.639       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 633 ms/op        | 577 ms/op        | -8.77     | -56.242       | -54.675       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnLongArray       | 206 ms/op        | 193 ms/op        | -6.15     | -12.817       | -12.544       | different distribution                     | NOT OK            |
| iceeaG.measureGroupingOnNumericDocValues| 411 ms/op        | 405 ms/op        | -1.34     | -6.731        | -4.311        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 429 ms/op        | -3.03     | -14.363       | -12.450       | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 608 ms/op        | 585 ms/op        | -3.82     | -24.288       | -21.972       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 225 ms/op        | 244 ms/op        | +8.26     | +18.174       | +19.004       | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +2.24     | +0.136        | +0.160        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 496 ms/op        | -10.42    | -57.932       | -57.450       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIteratorWithRepeat | 17 ms/op         | 21 ms/op         | +20.20    | +3.408        | +3.555        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 506 ms/op        | -7.67     | -42.209       | -41.814       | different distribution                     | NOT OK            |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 14.0 ms/op       | +7.91     | +1.012        | +1.046        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 32 us/op         | -19.17    | -7.554        | -7.426        | different distribution                     | NOT OK            |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -0.23     | -0.071        | +0.009        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | +1.59     | -5.153        | +5.982        | impossible to measure (1081 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 3 us/op          | +10.68    | -0.370        | +0.926        | impossible to measure (1139 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 535 us/op        | +0.84     | +0.411        | +8.479        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 505 us/op        | 483 us/op        | -4.37     | -24.749       | -19.286       | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 323 us/op        | 325 us/op        | +0.63     | +0.132        | +4.078        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 301 us/op        | +1.10     | +2.763        | +3.795        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 684 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74690e+09 ops/s| 3.29549e+08 ops/s| +430.09   | -1.41814e+09  | -1.41664e+09  | different distribution                     | OK                |
