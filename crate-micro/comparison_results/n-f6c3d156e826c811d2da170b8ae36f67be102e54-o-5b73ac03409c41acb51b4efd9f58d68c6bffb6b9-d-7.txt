old version: 5b73ac03409c41acb51b4efd9f58d68c6bffb6b9
new version: f6c3d156e826c811d2da170b8ae36f67be102e54
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 14.0 us/op       | -2.75     | -0.416        | -0.352        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -2.29     | -0.242        | -0.202        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -5.17     | -0.386        | -0.364        | different distribution                     | NOT OK            |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +1.01     | +0.011        | +0.017        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +17.32    | +0.003        | +0.004        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.0000 us/op     | 0.0000 us/op     | +20.90    | +0.001        | +0.001        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | +18.11    | +0.004        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 113 ms/op        | -2.12     | -2.570        | -2.331        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -4.13     | -0.110        | -0.079        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -1.11     | -0.005        | -0.004        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 82.0 ms/op       | +2.10     | +1.680        | +1.711        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 115 ms/op        | 114 ms/op        | -1.39     | -1.711        | -1.487        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -5.54     | -0.002        | -0.002        | different distribution                     | NOT OK            |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | -0.07     | -0.000        | +0.000        | same distribution                          | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 791 us/op        | 775 us/op        | -2.02     | -18.928       | -13.166       | different distribution                     | OK                |
| iceeaA.measureAggregateCollector        | 229 us/op        | 216 us/op        | -6.05     | -15.501       | -12.308       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 627 ms/op        | 631 ms/op        | +0.73     | +3.758        | +5.517        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 207 ms/op        | -3.58     | -8.355        | -6.899        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 408 ms/op        | -0.12     | -1.142        | +0.087        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 444 ms/op        | +0.53     | +1.192        | +3.526        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 638 ms/op        | 610 ms/op        | -4.42     | -30.181       | -26.208       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 226 ms/op        | 224 ms/op        | -0.87     | -2.301        | -1.633        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.54     | +0.030        | +0.042        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 549 ms/op        | 555 ms/op        | +1.10     | +5.443        | +6.483        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.08     | -0.022        | -0.007        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 545 ms/op        | 548 ms/op        | +0.60     | +3.053        | +3.540        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 13.0 ms/op       | +12.45    | +1.433        | +1.454        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | -0.30     | -0.172        | -0.069        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +0.36     | +0.009        | +0.085        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -2.88     | -6.199        | +5.299        | impossible to measure (1058 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -3.29     | -0.703        | +0.548        | impossible to measure (1077 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 543 us/op        | +2.32     | +6.999        | +17.449       | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 504 us/op        | 505 us/op        | +0.32     | -1.077        | +4.161        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 324 us/op        | +2.77     | +7.727        | +9.805        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 298 us/op        | +0.38     | -0.113        | +2.271        | same distribution                          | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 682 us/op        | +0.00     | +0.000        | +0.000        | only older samples                         | OK                |
| icoaI.benchmarkIntervalAvgAggregation   | 0 us/op          | 288 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icoaI.benchmarkIntervalSumAggregation   | 0 us/op          | 676 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74698e+09 ops/s| 1.74697e+09 ops/s| +0.00     | -3.00231e+04  | -1472.438     | different distribution                     | OK                |
