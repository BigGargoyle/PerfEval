old version: 03c913ecc91043b1cecdff738dd7bdea07857a9b
new version: 5b73ac03409c41acb51b4efd9f58d68c6bffb6b9
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -3.85     | -0.552        | -0.493        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 9.0 us/op        | 9.0 us/op        | -0.11     | -0.026        | +0.006        | same distribution                          | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -0.78     | -0.066        | -0.041        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.13     | -0.002        | +0.006        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.0000 us/op     | 0.0000 us/op     | -0.38     | -0.000        | -0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.0000 us/op     | 0.0000 us/op     | +0.22     | +0.000        | +0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | -0.21     | -0.000        | -0.000        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 113 ms/op        | -0.15     | -0.312        | -0.043        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -0.97     | -0.035        | -0.008        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.35     | +0.001        | +0.002        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | -0.10     | -0.096        | -0.068        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | -0.02     | -0.084        | +0.036        | same distribution                          | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -0.14     | -0.000        | -0.000        | different distribution                     | OK                |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | -0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 775 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 216 us/op        | 224 us/op        | +3.89     | +6.744        | +10.014       | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 631 ms/op        | 633 ms/op        | +0.25     | +0.490        | +2.772        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 207 ms/op        | 206 ms/op        | -0.68     | -2.251        | -0.692        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 408 ms/op        | 409 ms/op        | +0.25     | +0.442        | +1.588        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 444 ms/op        | 440 ms/op        | -0.91     | -5.175        | -2.970        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 610 ms/op        | 604 ms/op        | -0.92     | -6.323        | -4.825        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 231 ms/op        | +3.11     | +6.554        | +7.326        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.21     | +0.008        | +0.020        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 555 ms/op        | 554 ms/op        | -0.20     | -1.656        | -0.634        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | +0.04     | -0.001        | +0.013        | same distribution                          | OK                |
| iceedmS.measurePagingIteratorWithSort   | 548 ms/op        | 548 ms/op        | -0.03     | -0.379        | +0.097        | same distribution                          | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | -0.31     | -0.054        | -0.028        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.41     | +0.093        | +0.234        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +1.52     | +0.163        | +0.253        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | -3.30     | -7.002        | +4.925        | impossible to measure (1061 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +4.42     | -0.513        | +0.705        | impossible to measure (1025 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 543 us/op        | 537 us/op        | -1.16     | -11.350       | -1.143        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 505 us/op        | 503 us/op        | -0.55     | -5.177        | -0.452        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 324 us/op        | 322 us/op        | -0.59     | -3.210        | -0.674        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 296 us/op        | -0.46     | -1.998        | -0.757        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 682 us/op        | 690 us/op        | +1.12     | +1.880        | +13.556       | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74697e+09 ops/s| 1.74694e+09 ops/s| +0.00     | -4.98726e+04  | -1.52793e+04  | different distribution                     | OK                |
