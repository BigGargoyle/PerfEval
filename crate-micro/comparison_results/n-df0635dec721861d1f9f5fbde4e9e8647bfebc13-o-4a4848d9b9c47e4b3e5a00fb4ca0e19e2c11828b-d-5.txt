old version: 4a4848d9b9c47e4b3e5a00fb4ca0e19e2c11828b
new version: df0635dec721861d1f9f5fbde4e9e8647bfebc13
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -3.00     | -0.439        | -0.390        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -3.46     | -0.359        | -0.313        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -6.90     | -0.520        | -0.484        | different distribution                     | NOT OK            |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +0.96     | +0.011        | +0.016        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +14.66    | +0.003        | +0.003        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.00000 us/op    | 0.00000 us/op    | +21.35    | +0.001        | +0.001        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | +19.76    | +0.004        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 114 ms/op        | -1.96     | -2.381        | -2.158        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -6.06     | -0.154        | -0.123        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -1.01     | -0.004        | -0.004        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 82.0 ms/op       | +2.03     | +1.623        | +1.649        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 116 ms/op        | 114 ms/op        | -1.78     | -2.178        | -1.936        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -5.57     | -0.002        | -0.002        | different distribution                     | NOT OK            |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | +0.23     | +0.000        | +0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 784 us/op        | 775 us/op        | -1.21     | -11.812       | -7.468        | different distribution                     | OK                |
| iceeaA.measureAggregateCollector        | 227 us/op        | 215 us/op        | -5.36     | -13.583       | -10.864       | different distribution                     | NOT OK            |
| iceeaG.measureGroupBySumLong            | 628 ms/op        | 631 ms/op        | +0.43     | +1.827        | +3.698        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 208 ms/op        | -2.97     | -7.004        | -5.692        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 410 ms/op        | 409 ms/op        | -0.23     | -1.704        | -0.128        | different distribution                     | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 444 ms/op        | +0.44     | +0.513        | +3.781        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 635 ms/op        | 608 ms/op        | -4.24     | -28.701       | -25.388       | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 223 ms/op        | 224 ms/op        | +0.42     | +0.601        | +1.278        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.62     | +0.034        | +0.047        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 551 ms/op        | 554 ms/op        | +0.58     | +2.928        | +3.368        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.20     | -0.043        | -0.028        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 546 ms/op        | 549 ms/op        | +0.57     | +2.798        | +3.376        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 13.0 ms/op       | +12.22    | +1.407        | +1.428        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | -0.49     | -0.249        | -0.135        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | -0.04     | -0.055        | +0.043        | same distribution                          | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -3.39     | -6.157        | +5.307        | impossible to measure (1049 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -2.23     | -0.714        | +0.613        | impossible to measure (1040 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 544 us/op        | 540 us/op        | -0.79     | -8.182        | -0.269        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 504 us/op        | 500 us/op        | -0.82     | -6.243        | -1.935        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 320 us/op        | +1.69     | +4.176        | +6.454        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 294 us/op        | 298 us/op        | +1.21     | +2.959        | +4.080        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 669 us/op        | 696 us/op        | +4.14     | +22.393       | +32.527       | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74697e+09 ops/s| 1.74690e+09 ops/s| +0.00     | -8.30949e+04  | -5.31544e+04  | different distribution                     | OK                |
