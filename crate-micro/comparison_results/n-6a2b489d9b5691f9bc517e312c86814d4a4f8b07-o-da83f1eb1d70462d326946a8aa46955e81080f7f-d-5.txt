old version: da83f1eb1d70462d326946a8aa46955e81080f7f
new version: 6a2b489d9b5691f9bc517e312c86814d4a4f8b07
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -1.50     | -0.230        | -0.175        | different distribution                     | OK                |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -1.40     | -0.150        | -0.118        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -1.94     | -0.145        | -0.122        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | -0.43     | -0.010        | -0.002        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +0.58     | +0.000        | +0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.000000 us/op   | 0.000000 us/op   | -0.00     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | +0.08     | -0.000        | +0.000        | same distribution                          | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 113 ms/op        | 113 ms/op        | -0.08     | -0.225        | +0.050        | same distribution                          | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -2.61     | -0.070        | -0.045        | different distribution                     | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -0.32     | -0.002        | -0.001        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | -0.02     | -0.032        | -0.002        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | -0.04     | -0.151        | +0.051        | same distribution                          | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -0.04     | -0.000        | +0.000        | same distribution                          | OK                |
| iceT.currentTimeMillisOriginal          | 0.00000 us/op    | 0.00000 us/op    | -0.03     | -0.000        | -0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 779 us/op        | 776 us/op        | -0.36     | -5.900        | +0.135        | same distribution                          | OK                |
| iceeaA.measureAggregateCollector        | 214 us/op        | 216 us/op        | +0.57     | -0.667        | +3.187        | same distribution                          | OK                |
| iceeaG.measureGroupBySumLong            | 633 ms/op        | 634 ms/op        | +0.16     | +0.140        | +1.803        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 211 ms/op        | 207 ms/op        | -1.87     | -6.991        | -1.704        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 409 ms/op        | +0.04     | -0.594        | +0.888        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 442 ms/op        | 444 ms/op        | +0.28     | +0.111        | +2.331        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 609 ms/op        | 606 ms/op        | -0.50     | -3.976        | -2.208        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 225 ms/op        | +0.68     | +1.225        | +1.850        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | -0.25     | -0.023        | -0.010        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 554 ms/op        | -0.05     | -0.509        | -0.019        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.17     | -0.038        | -0.021        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 549 ms/op        | 548 ms/op        | -0.06     | -0.693        | +0.056        | same distribution                          | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | -0.41     | -0.067        | -0.040        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.24     | +0.029        | +0.158        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14 us/op         | 14 us/op         | +0.61     | +0.038        | +0.138        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | +0.20     | -5.158        | +6.022        | impossible to measure (1070 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -1.06     | -0.584        | +0.592        | impossible to measure (1043 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 547 us/op        | 531 us/op        | -2.86     | -20.605       | -11.131       | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 506 us/op        | 505 us/op        | -0.16     | -3.265        | +1.922        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 321 us/op        | 324 us/op        | +0.80     | +1.209        | +3.946        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 296 us/op        | 297 us/op        | +0.34     | +0.377        | +1.689        | different distribution                     | OK                |
| icoaI.benchmarkIntervalAggregation      | 689 us/op        | 685 us/op        | -0.59     | -10.125       | +2.430        | same distribution                          | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74691e+09 ops/s| 1.74693e+09 ops/s| -0.00     | +2729.241     | 4.09220e+04   | different distribution                     | OK                |
