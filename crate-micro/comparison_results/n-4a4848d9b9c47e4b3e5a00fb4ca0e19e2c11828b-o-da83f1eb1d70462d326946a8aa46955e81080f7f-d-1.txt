old version: da83f1eb1d70462d326946a8aa46955e81080f7f
new version: 4a4848d9b9c47e4b3e5a00fb4ca0e19e2c11828b
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 13.0 us/op       | 13.0 us/op       | -0.09     | -0.035        | +0.011        | same distribution                          | OK                |
| icaP.measure_parse_and~yze_simple_select| 9.0 us/op        | 9.0 us/op        | +0.05     | -0.014        | +0.024        | same distribution                          | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -0.26     | -0.030        | -0.007        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | -0.18     | -0.006        | +0.001        | same distribution                          | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +0.64     | +0.000        | +0.000        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.000000 us/op   | 0.000000 us/op   | -0.00     | -0.000        | +0.000        | same distribution                          | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.0000 us/op     | 0.0000 us/op     | -0.01     | -0.000        | +0.000        | same distribution                          | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 114 ms/op        | 113 ms/op        | -0.50     | -0.688        | -0.437        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | +0.27     | -0.006        | +0.017        | same distribution                          | OK                |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | +0.03     | -0.000        | +0.000        | same distribution                          | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 82.0 ms/op       | 82.0 ms/op       | -0.06     | -0.066        | -0.031        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 114 ms/op        | 114 ms/op        | +0.07     | -0.049        | +0.185        | same distribution                          | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -0.04     | -0.000        | +0.000        | same distribution                          | OK                |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | -0.23     | -0.000        | -0.000        | different distribution                     | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 775 us/op        | 776 us/op        | +0.11     | -1.032        | +2.963        | same distribution                          | OK                |
| iceeaA.measureAggregateCollector        | 215 us/op        | 216 us/op        | +0.25     | -1.239        | +2.196        | same distribution                          | OK                |
| iceeaG.measureGroupBySumLong            | 631 ms/op        | 634 ms/op        | +0.41     | +1.889        | +3.444        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 208 ms/op        | 207 ms/op        | -0.65     | -2.387        | -0.249        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 409 ms/op        | +0.07     | -0.441        | +1.024        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 444 ms/op        | 444 ms/op        | -0.09     | -2.281        | +1.421        | same distribution                          | OK                |
| iceeaG.measureGroupByMinString          | 608 ms/op        | 606 ms/op        | -0.27     | -2.441        | -0.921        | different distribution                     | OK                |
| iceeccL.measureConsumeL~neBatchIterator | 224 ms/op        | 225 ms/op        | +0.41     | +0.598        | +1.274        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | -0.14     | -0.016        | -0.002        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 554 ms/op        | 554 ms/op        | -0.05     | -0.466        | -0.061        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | +0.06     | +0.004        | +0.017        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 549 ms/op        | 548 ms/op        | -0.06     | -0.608        | -0.101        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 13.0 ms/op       | 13.0 ms/op       | -0.23     | -0.043        | -0.015        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.35     | +0.070        | +0.198        | different distribution                     | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +0.74     | +0.054        | +0.151        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 17 us/op         | 17 us/op         | +0.24     | -5.342        | +6.246        | impossible to measure (1088 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | -3.25     | -0.707        | +0.557        | impossible to measure (1070 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 540 us/op        | 531 us/op        | -1.56     | -12.494       | -4.681        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 500 us/op        | 505 us/op        | +1.00     | +2.716        | +7.069        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 320 us/op        | 324 us/op        | +1.06     | +1.950        | +4.806        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 298 us/op        | 297 us/op        | -0.21     | -1.393        | +0.135        | same distribution                          | OK                |
| icoaI.benchmarkIntervalAggregation      | 696 us/op        | 685 us/op        | -1.61     | -17.087       | -4.681        | different distribution                     | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74690e+09 ops/s| 1.74693e+09 ops/s| -0.00     | 1.65779e+04   | 4.97097e+04   | different distribution                     | OK                |
