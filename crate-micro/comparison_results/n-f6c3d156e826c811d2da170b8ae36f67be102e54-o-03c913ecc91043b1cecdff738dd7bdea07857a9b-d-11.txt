old version: 03c913ecc91043b1cecdff738dd7bdea07857a9b
new version: f6c3d156e826c811d2da170b8ae36f67be102e54
_____________________________________________________________________________________________________________________________________________________________________________________________
| Name                                    | NewAverage       | OldAverage       | Change [%]| Lower CI bound| Upper CI bound| Comparison result                          | Comparison verdict|
|============================================================================================================================================================================================|
| icaP.measure_parse_ana~lan_simple_select| 14.0 us/op       | 13.0 us/op       | -6.49     | -0.937        | -0.872        | different distribution                     | NOT OK            |
| icaP.measure_parse_and~yze_simple_select| 10.0 us/op       | 9.0 us/op        | -2.39     | -0.250        | -0.210        | different distribution                     | OK                |
| icaP.measure_parse_simple_select        | 7.0 us/op        | 7.0 us/op        | -5.90     | -0.441        | -0.417        | different distribution                     | NOT OK            |
| iccS.measure_Long_parseLong_invalid     | 1.00 us/op       | 1.00 us/op       | +1.15     | +0.012        | +0.020        | different distribution                     | OK                |
| iccS.measure_Long_parseLong_valid       | 0.000 us/op      | 0.000 us/op      | +16.87    | +0.003        | +0.004        | different distribution                     | OK                |
| iccS.measure_StringUti~ParseLong_invalid| 0.00000 us/op    | 0.00000 us/op    | +21.17    | +0.001        | +0.001        | different distribution                     | OK                |
| iccS.measure_StringUti~ryParseLong_valid| 0.000 us/op      | 0.000 us/op      | +17.86    | +0.004        | +0.004        | different distribution                     | OK                |
| icdjR.measureConsumeBlockNestedLoopJoin | 116 ms/op        | 113 ms/op        | -2.27     | -2.736        | -2.510        | different distribution                     | OK                |
| icdjR.measureConsumeHashInnerJoin       | 2.0 ms/op        | 2.0 ms/op        | -5.06     | -0.132        | -0.100        | different distribution                     | NOT OK            |
| icdjR.measureConsumeHa~thHashCollisions | 0.000 ms/op      | 0.000 ms/op      | -0.76     | -0.004        | -0.003        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopJoin      | 81.0 ms/op       | 82.0 ms/op       | +2.00     | +1.596        | +1.625        | different distribution                     | OK                |
| icdjR.measureConsumeNestedLoopLeftJoin  | 115 ms/op        | 114 ms/op        | -1.41     | -1.733        | -1.516        | different distribution                     | OK                |
| iceT.currentTimeMillisNextGen           | 0.0000 us/op     | 0.0000 us/op     | -5.67     | -0.002        | -0.002        | different distribution                     | NOT OK            |
| iceT.currentTimeMillisOriginal          | 0.0000 us/op     | 0.0000 us/op     | -0.08     | -0.000        | +0.000        | same distribution                          | OK                |
| ice.dml.IndexerBenchmark.measure_index  | 0 us/op          | 791 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| iceeaA.measureAggregateCollector        | 229 us/op        | 224 us/op        | -2.40     | -6.686        | -4.418        | different distribution                     | OK                |
| iceeaG.measureGroupBySumLong            | 627 ms/op        | 633 ms/op        | +0.98     | +4.938        | +7.483        | different distribution                     | OK                |
| iceeaG.measureGroupingOnLongArray       | 215 ms/op        | 206 ms/op        | -4.24     | -9.195        | -9.002        | different distribution                     | OK                |
| iceeaG.measureGroupingOnNumericDocValues| 409 ms/op        | 409 ms/op        | +0.12     | -0.022        | +0.999        | same distribution                          | OK                |
| iceeaG.measureGroupingO~NumericDocValues| 441 ms/op        | 440 ms/op        | -0.39     | -2.810        | -0.656        | different distribution                     | OK                |
| iceeaG.measureGroupByMinString          | 638 ms/op        | 604 ms/op        | -5.30     | -35.670       | -32.089       | different distribution                     | NOT OK            |
| iceeccL.measureConsumeL~neBatchIterator | 226 ms/op        | 231 ms/op        | +2.21     | +4.610        | +5.390        | different distribution                     | OK                |
| iceeccO.measureLoadAndC~neBatchIterator | 7.0 s/op         | 7.0 s/op         | +0.75     | +0.043        | +0.056        | different distribution                     | OK                |
| iceedmS.measureListSort                 | 549 ms/op        | 554 ms/op        | +0.89     | +4.676        | +5.135        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithRepeat | 17.0 ms/op       | 17.0 ms/op       | -0.04     | -0.015        | -0.001        | different distribution                     | OK                |
| iceedmS.measurePagingIteratorWithSort   | 545 ms/op        | 548 ms/op        | +0.58     | +2.935        | +3.364        | different distribution                     | OK                |
| iceedmS.measurePagingIt~orWithoutRepeat | 12.0 ms/op       | 13.0 ms/op       | +12.10    | +1.394        | +1.412        | different distribution                     | OK                |
| iceerC.measureFileReadingIteratorForCSV | 39 us/op         | 39 us/op         | +0.11     | -0.007        | +0.095        | same distribution                          | OK                |
| iceerJ.measureFileReadingIteratorForJson| 14.0 us/op       | 14.0 us/op       | +1.88     | +0.221        | +0.295        | different distribution                     | OK                |
| icejC.benchmarkMemoryMXBeanMethod       | 18 us/op         | 17 us/op         | -6.09     | -7.513        | +5.005        | impossible to measure (1049 samples needed)| NOT OK            |
| icejC.benchmarkRuntimeMethod            | 2 us/op          | 2 us/op          | +0.99     | -0.645        | +0.665        | impossible to measure (1028 samples needed)| NOT OK            |
| icoaH.benchmarkHLLAggregationOffHeap    | 531 us/op        | 537 us/op        | +1.14     | +1.250        | +9.977        | different distribution                     | OK                |
| icoaH.benchmarkHLLAggregationOnHeap     | 504 us/op        | 503 us/op        | -0.23     | -3.919        | +1.225        | same distribution                          | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur128     | 315 us/op        | 322 us/op        | +2.16     | +5.602        | +7.899        | different distribution                     | OK                |
| icoaH.benchmarkHLLPlusPlusMurmur64      | 297 us/op        | 296 us/op        | -0.07     | -1.405        | +0.934        | same distribution                          | OK                |
| icoaI.benchmarkIntervalAggregation      | 0 us/op          | 690 us/op        | +0.00     | +0.000        | +0.000        | only older samples                         | OK                |
| icoaI.benchmarkIntervalAvgAggregation   | 0 us/op          | 288 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| icoaI.benchmarkIntervalSumAggregation   | 0 us/op          | 676 us/op        | +0.00     | +0.000        | +0.000        | only newer samples                         | OK                |
| ict.StringTypeTest.booleanConversion    | 1.74698e+09 ops/s| 1.74694e+09 ops/s| +0.00     | -6.48197e+04  | -3.22778e+04  | different distribution                     | OK                |
